"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AddLFTagsToResourceCommand: () => AddLFTagsToResourceCommand,
  AlreadyExistsException: () => AlreadyExistsException,
  ApplicationStatus: () => ApplicationStatus,
  AssumeDecoratedRoleWithSAMLCommand: () => AssumeDecoratedRoleWithSAMLCommand,
  BatchGrantPermissionsCommand: () => BatchGrantPermissionsCommand,
  BatchRevokePermissionsCommand: () => BatchRevokePermissionsCommand,
  CancelTransactionCommand: () => CancelTransactionCommand,
  CommitTransactionCommand: () => CommitTransactionCommand,
  ComparisonOperator: () => ComparisonOperator,
  ConcurrentModificationException: () => ConcurrentModificationException,
  CreateDataCellsFilterCommand: () => CreateDataCellsFilterCommand,
  CreateLFTagCommand: () => CreateLFTagCommand,
  CreateLFTagExpressionCommand: () => CreateLFTagExpressionCommand,
  CreateLakeFormationIdentityCenterConfigurationCommand: () => CreateLakeFormationIdentityCenterConfigurationCommand,
  CreateLakeFormationOptInCommand: () => CreateLakeFormationOptInCommand,
  DataLakeResourceType: () => DataLakeResourceType,
  DeleteDataCellsFilterCommand: () => DeleteDataCellsFilterCommand,
  DeleteLFTagCommand: () => DeleteLFTagCommand,
  DeleteLFTagExpressionCommand: () => DeleteLFTagExpressionCommand,
  DeleteLakeFormationIdentityCenterConfigurationCommand: () => DeleteLakeFormationIdentityCenterConfigurationCommand,
  DeleteLakeFormationOptInCommand: () => DeleteLakeFormationOptInCommand,
  DeleteObjectsOnCancelCommand: () => DeleteObjectsOnCancelCommand,
  DeregisterResourceCommand: () => DeregisterResourceCommand,
  DescribeLakeFormationIdentityCenterConfigurationCommand: () => DescribeLakeFormationIdentityCenterConfigurationCommand,
  DescribeResourceCommand: () => DescribeResourceCommand,
  DescribeTransactionCommand: () => DescribeTransactionCommand,
  EnableStatus: () => EnableStatus,
  EntityNotFoundException: () => EntityNotFoundException,
  ExpiredException: () => ExpiredException,
  ExtendTransactionCommand: () => ExtendTransactionCommand,
  FieldNameString: () => FieldNameString,
  GetDataCellsFilterCommand: () => GetDataCellsFilterCommand,
  GetDataLakePrincipalCommand: () => GetDataLakePrincipalCommand,
  GetDataLakeSettingsCommand: () => GetDataLakeSettingsCommand,
  GetEffectivePermissionsForPathCommand: () => GetEffectivePermissionsForPathCommand,
  GetLFTagCommand: () => GetLFTagCommand,
  GetLFTagExpressionCommand: () => GetLFTagExpressionCommand,
  GetQueryStateCommand: () => GetQueryStateCommand,
  GetQueryStatisticsCommand: () => GetQueryStatisticsCommand,
  GetResourceLFTagsCommand: () => GetResourceLFTagsCommand,
  GetTableObjectsCommand: () => GetTableObjectsCommand,
  GetTemporaryGluePartitionCredentialsCommand: () => GetTemporaryGluePartitionCredentialsCommand,
  GetTemporaryGlueTableCredentialsCommand: () => GetTemporaryGlueTableCredentialsCommand,
  GetWorkUnitResultsCommand: () => GetWorkUnitResultsCommand,
  GetWorkUnitResultsRequestFilterSensitiveLog: () => GetWorkUnitResultsRequestFilterSensitiveLog,
  GetWorkUnitResultsResponseFilterSensitiveLog: () => GetWorkUnitResultsResponseFilterSensitiveLog,
  GetWorkUnitsCommand: () => GetWorkUnitsCommand,
  GlueEncryptionException: () => GlueEncryptionException,
  GrantPermissionsCommand: () => GrantPermissionsCommand,
  InternalServiceException: () => InternalServiceException,
  InvalidInputException: () => InvalidInputException,
  LakeFormation: () => LakeFormation,
  LakeFormationClient: () => LakeFormationClient,
  LakeFormationServiceException: () => LakeFormationServiceException,
  ListDataCellsFilterCommand: () => ListDataCellsFilterCommand,
  ListLFTagExpressionsCommand: () => ListLFTagExpressionsCommand,
  ListLFTagsCommand: () => ListLFTagsCommand,
  ListLakeFormationOptInsCommand: () => ListLakeFormationOptInsCommand,
  ListPermissionsCommand: () => ListPermissionsCommand,
  ListResourcesCommand: () => ListResourcesCommand,
  ListTableStorageOptimizersCommand: () => ListTableStorageOptimizersCommand,
  ListTransactionsCommand: () => ListTransactionsCommand,
  OperationTimeoutException: () => OperationTimeoutException,
  OptimizerType: () => OptimizerType,
  Permission: () => Permission,
  PermissionType: () => PermissionType,
  PermissionTypeMismatchException: () => PermissionTypeMismatchException,
  PutDataLakeSettingsCommand: () => PutDataLakeSettingsCommand,
  QueryStateString: () => QueryStateString,
  RegisterResourceCommand: () => RegisterResourceCommand,
  RemoveLFTagsFromResourceCommand: () => RemoveLFTagsFromResourceCommand,
  ResourceNotReadyException: () => ResourceNotReadyException,
  ResourceNumberLimitExceededException: () => ResourceNumberLimitExceededException,
  ResourceShareType: () => ResourceShareType,
  ResourceType: () => ResourceType,
  RevokePermissionsCommand: () => RevokePermissionsCommand,
  SearchDatabasesByLFTagsCommand: () => SearchDatabasesByLFTagsCommand,
  SearchTablesByLFTagsCommand: () => SearchTablesByLFTagsCommand,
  StartQueryPlanningCommand: () => StartQueryPlanningCommand,
  StartQueryPlanningRequestFilterSensitiveLog: () => StartQueryPlanningRequestFilterSensitiveLog,
  StartTransactionCommand: () => StartTransactionCommand,
  StatisticsNotReadyYetException: () => StatisticsNotReadyYetException,
  ThrottledException: () => ThrottledException,
  TransactionCanceledException: () => TransactionCanceledException,
  TransactionCommitInProgressException: () => TransactionCommitInProgressException,
  TransactionCommittedException: () => TransactionCommittedException,
  TransactionStatus: () => TransactionStatus,
  TransactionStatusFilter: () => TransactionStatusFilter,
  TransactionType: () => TransactionType,
  UpdateDataCellsFilterCommand: () => UpdateDataCellsFilterCommand,
  UpdateLFTagCommand: () => UpdateLFTagCommand,
  UpdateLFTagExpressionCommand: () => UpdateLFTagExpressionCommand,
  UpdateLakeFormationIdentityCenterConfigurationCommand: () => UpdateLakeFormationIdentityCenterConfigurationCommand,
  UpdateResourceCommand: () => UpdateResourceCommand,
  UpdateTableObjectsCommand: () => UpdateTableObjectsCommand,
  UpdateTableStorageOptimizerCommand: () => UpdateTableStorageOptimizerCommand,
  WorkUnitsNotReadyYetException: () => WorkUnitsNotReadyYetException,
  __Client: () => import_smithy_client.Client,
  paginateGetEffectivePermissionsForPath: () => paginateGetEffectivePermissionsForPath,
  paginateGetTableObjects: () => paginateGetTableObjects,
  paginateGetWorkUnits: () => paginateGetWorkUnits,
  paginateListDataCellsFilter: () => paginateListDataCellsFilter,
  paginateListLFTagExpressions: () => paginateListLFTagExpressions,
  paginateListLFTags: () => paginateListLFTags,
  paginateListLakeFormationOptIns: () => paginateListLakeFormationOptIns,
  paginateListPermissions: () => paginateListPermissions,
  paginateListResources: () => paginateListResources,
  paginateListTableStorageOptimizers: () => paginateListTableStorageOptimizers,
  paginateListTransactions: () => paginateListTransactions,
  paginateSearchDatabasesByLFTags: () => paginateSearchDatabasesByLFTags,
  paginateSearchTablesByLFTags: () => paginateSearchTablesByLFTags
});
module.exports = __toCommonJS(index_exports);

// src/LakeFormationClient.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return Object.assign(options, {
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "lakeformation"
  });
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/LakeFormationClient.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = Object.assign(
    (0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig),
    (0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig),
    (0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig),
    getHttpAuthExtensionConfiguration(runtimeConfig)
  );
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return Object.assign(
    runtimeConfig,
    (0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    (0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    (0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    resolveHttpAuthRuntimeConfig(extensionConfiguration)
  );
}, "resolveRuntimeExtensions");

// src/LakeFormationClient.ts
var LakeFormationClient = class extends import_smithy_client.Client {
  static {
    __name(this, "LakeFormationClient");
  }
  /**
   * The resolved configuration of LakeFormationClient class. This is resolved and normalized from the {@link LakeFormationClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    super(_config_0);
    this.initConfig = _config_0;
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultLakeFormationHttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: /* @__PURE__ */ __name(async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        }), "identityProviderConfigProvider")
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/LakeFormation.ts


// src/commands/AddLFTagsToResourceCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");




// src/models/LakeFormationServiceException.ts

var LakeFormationServiceException = class _LakeFormationServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "LakeFormationServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _LakeFormationServiceException.prototype);
  }
};

// src/models/models_0.ts

var AccessDeniedException = class _AccessDeniedException extends LakeFormationServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceType = {
  DATABASE: "DATABASE",
  TABLE: "TABLE"
};
var ConcurrentModificationException = class _ConcurrentModificationException extends LakeFormationServiceException {
  static {
    __name(this, "ConcurrentModificationException");
  }
  name = "ConcurrentModificationException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConcurrentModificationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConcurrentModificationException.prototype);
    this.Message = opts.Message;
  }
};
var EntityNotFoundException = class _EntityNotFoundException extends LakeFormationServiceException {
  static {
    __name(this, "EntityNotFoundException");
  }
  name = "EntityNotFoundException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "EntityNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _EntityNotFoundException.prototype);
    this.Message = opts.Message;
  }
};
var InternalServiceException = class _InternalServiceException extends LakeFormationServiceException {
  static {
    __name(this, "InternalServiceException");
  }
  name = "InternalServiceException";
  $fault = "server";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServiceException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServiceException.prototype);
    this.Message = opts.Message;
  }
};
var InvalidInputException = class _InvalidInputException extends LakeFormationServiceException {
  static {
    __name(this, "InvalidInputException");
  }
  name = "InvalidInputException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InvalidInputException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _InvalidInputException.prototype);
    this.Message = opts.Message;
  }
};
var OperationTimeoutException = class _OperationTimeoutException extends LakeFormationServiceException {
  static {
    __name(this, "OperationTimeoutException");
  }
  name = "OperationTimeoutException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "OperationTimeoutException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _OperationTimeoutException.prototype);
    this.Message = opts.Message;
  }
};
var AlreadyExistsException = class _AlreadyExistsException extends LakeFormationServiceException {
  static {
    __name(this, "AlreadyExistsException");
  }
  name = "AlreadyExistsException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AlreadyExistsException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AlreadyExistsException.prototype);
    this.Message = opts.Message;
  }
};
var ApplicationStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var Permission = {
  ALL: "ALL",
  ALTER: "ALTER",
  ASSOCIATE: "ASSOCIATE",
  CREATE_CATALOG: "CREATE_CATALOG",
  CREATE_DATABASE: "CREATE_DATABASE",
  CREATE_LF_TAG: "CREATE_LF_TAG",
  CREATE_LF_TAG_EXPRESSION: "CREATE_LF_TAG_EXPRESSION",
  CREATE_TABLE: "CREATE_TABLE",
  DATA_LOCATION_ACCESS: "DATA_LOCATION_ACCESS",
  DELETE: "DELETE",
  DESCRIBE: "DESCRIBE",
  DROP: "DROP",
  GRANT_WITH_LF_TAG_EXPRESSION: "GRANT_WITH_LF_TAG_EXPRESSION",
  INSERT: "INSERT",
  SELECT: "SELECT",
  SUPER_USER: "SUPER_USER"
};
var TransactionCommitInProgressException = class _TransactionCommitInProgressException extends LakeFormationServiceException {
  static {
    __name(this, "TransactionCommitInProgressException");
  }
  name = "TransactionCommitInProgressException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TransactionCommitInProgressException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TransactionCommitInProgressException.prototype);
    this.Message = opts.Message;
  }
};
var TransactionCommittedException = class _TransactionCommittedException extends LakeFormationServiceException {
  static {
    __name(this, "TransactionCommittedException");
  }
  name = "TransactionCommittedException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TransactionCommittedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TransactionCommittedException.prototype);
    this.Message = opts.Message;
  }
};
var TransactionStatus = {
  ABORTED: "ABORTED",
  ACTIVE: "ACTIVE",
  COMMITTED: "COMMITTED",
  COMMIT_IN_PROGRESS: "COMMIT_IN_PROGRESS"
};
var TransactionCanceledException = class _TransactionCanceledException extends LakeFormationServiceException {
  static {
    __name(this, "TransactionCanceledException");
  }
  name = "TransactionCanceledException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "TransactionCanceledException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _TransactionCanceledException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceNumberLimitExceededException = class _ResourceNumberLimitExceededException extends LakeFormationServiceException {
  static {
    __name(this, "ResourceNumberLimitExceededException");
  }
  name = "ResourceNumberLimitExceededException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNumberLimitExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNumberLimitExceededException.prototype);
    this.Message = opts.Message;
  }
};
var EnableStatus = {
  DISABLED: "DISABLED",
  ENABLED: "ENABLED"
};
var ResourceNotReadyException = class _ResourceNotReadyException extends LakeFormationServiceException {
  static {
    __name(this, "ResourceNotReadyException");
  }
  name = "ResourceNotReadyException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotReadyException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotReadyException.prototype);
    this.Message = opts.Message;
  }
};
var QueryStateString = {
  ERROR: "ERROR",
  EXPIRED: "EXPIRED",
  FINISHED: "FINISHED",
  PENDING: "PENDING",
  WORKUNITS_AVAILABLE: "WORKUNITS_AVAILABLE"
};
var ExpiredException = class _ExpiredException extends LakeFormationServiceException {
  static {
    __name(this, "ExpiredException");
  }
  name = "ExpiredException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ExpiredException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ExpiredException.prototype);
    this.Message = opts.Message;
  }
};
var StatisticsNotReadyYetException = class _StatisticsNotReadyYetException extends LakeFormationServiceException {
  static {
    __name(this, "StatisticsNotReadyYetException");
  }
  name = "StatisticsNotReadyYetException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "StatisticsNotReadyYetException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _StatisticsNotReadyYetException.prototype);
    this.Message = opts.Message;
  }
};
var ThrottledException = class _ThrottledException extends LakeFormationServiceException {
  static {
    __name(this, "ThrottledException");
  }
  name = "ThrottledException";
  $fault = "client";
  $retryable = {
    throttling: true
  };
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottledException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottledException.prototype);
    this.Message = opts.Message;
  }
};
var GlueEncryptionException = class _GlueEncryptionException extends LakeFormationServiceException {
  static {
    __name(this, "GlueEncryptionException");
  }
  name = "GlueEncryptionException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "GlueEncryptionException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _GlueEncryptionException.prototype);
    this.Message = opts.Message;
  }
};
var PermissionType = {
  CELL_FILTER_PERMISSION: "CELL_FILTER_PERMISSION",
  COLUMN_PERMISSION: "COLUMN_PERMISSION",
  NESTED_CELL_PERMISSION: "NESTED_CELL_PERMISSION",
  NESTED_PERMISSION: "NESTED_PERMISSION"
};
var PermissionTypeMismatchException = class _PermissionTypeMismatchException extends LakeFormationServiceException {
  static {
    __name(this, "PermissionTypeMismatchException");
  }
  name = "PermissionTypeMismatchException";
  $fault = "client";
  /**
   * <p>A message describing the problem.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "PermissionTypeMismatchException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _PermissionTypeMismatchException.prototype);
    this.Message = opts.Message;
  }
};
var WorkUnitsNotReadyYetException = class _WorkUnitsNotReadyYetException extends LakeFormationServiceException {
  static {
    __name(this, "WorkUnitsNotReadyYetException");
  }
  name = "WorkUnitsNotReadyYetException";
  $fault = "client";
  /**
   * <p>A message describing the error.</p>
   * @public
   */
  Message;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "WorkUnitsNotReadyYetException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _WorkUnitsNotReadyYetException.prototype);
    this.Message = opts.Message;
  }
};
var ResourceShareType = {
  ALL: "ALL",
  FOREIGN: "FOREIGN"
};
var DataLakeResourceType = {
  CATALOG: "CATALOG",
  DATABASE: "DATABASE",
  DATA_LOCATION: "DATA_LOCATION",
  LF_NAMED_TAG_EXPRESSION: "LF_NAMED_TAG_EXPRESSION",
  LF_TAG: "LF_TAG",
  LF_TAG_POLICY: "LF_TAG_POLICY",
  LF_TAG_POLICY_DATABASE: "LF_TAG_POLICY_DATABASE",
  LF_TAG_POLICY_TABLE: "LF_TAG_POLICY_TABLE",
  TABLE: "TABLE"
};
var ComparisonOperator = {
  BEGINS_WITH: "BEGINS_WITH",
  BETWEEN: "BETWEEN",
  CONTAINS: "CONTAINS",
  EQ: "EQ",
  GE: "GE",
  GT: "GT",
  IN: "IN",
  LE: "LE",
  LT: "LT",
  NE: "NE",
  NOT_CONTAINS: "NOT_CONTAINS"
};
var FieldNameString = {
  LAST_MODIFIED: "LAST_MODIFIED",
  RESOURCE_ARN: "RESOURCE_ARN",
  ROLE_ARN: "ROLE_ARN"
};
var OptimizerType = {
  COMPACTION: "COMPACTION",
  GARBAGE_COLLECTION: "GARBAGE_COLLECTION",
  GENERIC: "ALL"
};
var TransactionStatusFilter = {
  ABORTED: "ABORTED",
  ACTIVE: "ACTIVE",
  ALL: "ALL",
  COMMITTED: "COMMITTED",
  COMPLETED: "COMPLETED"
};
var TransactionType = {
  READ_AND_WRITE: "READ_AND_WRITE",
  READ_ONLY: "READ_ONLY"
};
var GetWorkUnitResultsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.WorkUnitToken && { WorkUnitToken: import_smithy_client.SENSITIVE_STRING }
}), "GetWorkUnitResultsRequestFilterSensitiveLog");
var GetWorkUnitResultsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj
}), "GetWorkUnitResultsResponseFilterSensitiveLog");
var StartQueryPlanningRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({
  ...obj,
  ...obj.QueryString && { QueryString: import_smithy_client.SENSITIVE_STRING }
}), "StartQueryPlanningRequestFilterSensitiveLog");

// src/protocols/Aws_restJson1.ts
var se_AddLFTagsToResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/AddLFTagsToResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      LFTags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "LFTags"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AddLFTagsToResourceCommand");
var se_AssumeDecoratedRoleWithSAMLCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/AssumeDecoratedRoleWithSAML");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DurationSeconds: [],
      PrincipalArn: [],
      RoleArn: [],
      SAMLAssertion: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_AssumeDecoratedRoleWithSAMLCommand");
var se_BatchGrantPermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/BatchGrantPermissions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Entries: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Entries")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchGrantPermissionsCommand");
var se_BatchRevokePermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/BatchRevokePermissions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Entries: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Entries")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchRevokePermissionsCommand");
var se_CancelTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CancelTransaction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelTransactionCommand");
var se_CommitTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CommitTransaction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CommitTransactionCommand");
var se_CreateDataCellsFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateDataCellsFilter");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TableData: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TableData")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDataCellsFilterCommand");
var se_CreateLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLakeFormationIdentityCenterConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      ExternalFiltering: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ExternalFiltering"),
      InstanceArn: [],
      ShareRecipients: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ShareRecipients")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLakeFormationIdentityCenterConfigurationCommand");
var se_CreateLakeFormationOptInCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLakeFormationOptIn");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Condition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Condition"),
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLakeFormationOptInCommand");
var se_CreateLFTagCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLFTag");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      TagKey: [],
      TagValues: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagValues")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLFTagCommand");
var se_CreateLFTagExpressionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/CreateLFTagExpression");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Description: [],
      Expression: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Expression"),
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateLFTagExpressionCommand");
var se_DeleteDataCellsFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteDataCellsFilter");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DatabaseName: [],
      Name: [],
      TableCatalogId: [],
      TableName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteDataCellsFilterCommand");
var se_DeleteLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLakeFormationIdentityCenterConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLakeFormationIdentityCenterConfigurationCommand");
var se_DeleteLakeFormationOptInCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLakeFormationOptIn");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      Condition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Condition"),
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLakeFormationOptInCommand");
var se_DeleteLFTagCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLFTag");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      TagKey: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLFTagCommand");
var se_DeleteLFTagExpressionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteLFTagExpression");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteLFTagExpressionCommand");
var se_DeleteObjectsOnCancelCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeleteObjectsOnCancel");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DatabaseName: [],
      Objects: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Objects"),
      TableName: [],
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeleteObjectsOnCancelCommand");
var se_DeregisterResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DeregisterResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DeregisterResourceCommand");
var se_DescribeLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeLakeFormationIdentityCenterConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeLakeFormationIdentityCenterConfigurationCommand");
var se_DescribeResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ResourceArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeResourceCommand");
var se_DescribeTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/DescribeTransaction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_DescribeTransactionCommand");
var se_ExtendTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ExtendTransaction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ExtendTransactionCommand");
var se_GetDataCellsFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetDataCellsFilter");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      DatabaseName: [],
      Name: [],
      TableCatalogId: [],
      TableName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetDataCellsFilterCommand");
var se_GetDataLakePrincipalCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/GetDataLakePrincipal");
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetDataLakePrincipalCommand");
var se_GetDataLakeSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetDataLakeSettings");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetDataLakeSettingsCommand");
var se_GetEffectivePermissionsForPathCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetEffectivePermissionsForPath");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      MaxResults: [],
      NextToken: [],
      ResourceArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetEffectivePermissionsForPathCommand");
var se_GetLFTagCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetLFTag");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      TagKey: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetLFTagCommand");
var se_GetLFTagExpressionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetLFTagExpression");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetLFTagExpressionCommand");
var se_GetQueryStateCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetQueryState");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      QueryId: []
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "query-" + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetQueryStateCommand");
var se_GetQueryStatisticsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetQueryStatistics");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      QueryId: []
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "query-" + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetQueryStatisticsCommand");
var se_GetResourceLFTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetResourceLFTags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource"),
      ShowAssignedLFTags: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetResourceLFTagsCommand");
var se_GetTableObjectsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetTableObjects");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DatabaseName: [],
      MaxResults: [],
      NextToken: [],
      PartitionPredicate: [],
      QueryAsOfTime: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "QueryAsOfTime"),
      TableName: [],
      TransactionId: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetTableObjectsCommand");
var se_GetTemporaryGluePartitionCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetTemporaryGluePartitionCredentials");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AuditContext: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AuditContext"),
      DurationSeconds: [],
      Partition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Partition"),
      Permissions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Permissions"),
      SupportedPermissionTypes: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SupportedPermissionTypes"),
      TableArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetTemporaryGluePartitionCredentialsCommand");
var se_GetTemporaryGlueTableCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetTemporaryGlueTableCredentials");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      AuditContext: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "AuditContext"),
      DurationSeconds: [],
      Permissions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Permissions"),
      QuerySessionContext: /* @__PURE__ */ __name((_) => se_QuerySessionContext(_, context), "QuerySessionContext"),
      S3Path: [],
      SupportedPermissionTypes: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "SupportedPermissionTypes"),
      TableArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetTemporaryGlueTableCredentialsCommand");
var se_GetWorkUnitResultsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetWorkUnitResults");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      QueryId: [],
      WorkUnitId: [],
      WorkUnitToken: []
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "data-" + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetWorkUnitResultsCommand");
var se_GetWorkUnitsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GetWorkUnits");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      NextToken: [],
      PageSize: [],
      QueryId: []
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "query-" + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GetWorkUnitsCommand");
var se_GrantPermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/GrantPermissions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Condition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Condition"),
      Permissions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Permissions"),
      PermissionsWithGrantOption: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PermissionsWithGrantOption"),
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_GrantPermissionsCommand");
var se_ListDataCellsFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListDataCellsFilter");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: [],
      Table: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Table")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListDataCellsFilterCommand");
var se_ListLakeFormationOptInsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListLakeFormationOptIns");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      MaxResults: [],
      NextToken: [],
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListLakeFormationOptInsCommand");
var se_ListLFTagExpressionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListLFTagExpressions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListLFTagExpressionsCommand");
var se_ListLFTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListLFTags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      MaxResults: [],
      NextToken: [],
      ResourceShareType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListLFTagsCommand");
var se_ListPermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListPermissions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      IncludeRelated: [],
      MaxResults: [],
      NextToken: [],
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource"),
      ResourceType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListPermissionsCommand");
var se_ListResourcesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListResources");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      FilterConditionList: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "FilterConditionList"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListResourcesCommand");
var se_ListTableStorageOptimizersCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListTableStorageOptimizers");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DatabaseName: [],
      MaxResults: [],
      NextToken: [],
      StorageOptimizerType: [],
      TableName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTableStorageOptimizersCommand");
var se_ListTransactionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/ListTransactions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      MaxResults: [],
      NextToken: [],
      StatusFilter: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ListTransactionsCommand");
var se_PutDataLakeSettingsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/PutDataLakeSettings");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DataLakeSettings: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "DataLakeSettings")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_PutDataLakeSettingsCommand");
var se_RegisterResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RegisterResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      HybridAccessEnabled: [],
      ResourceArn: [],
      RoleArn: [],
      UseServiceLinkedRole: [],
      WithFederation: [],
      WithPrivilegedAccess: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RegisterResourceCommand");
var se_RemoveLFTagsFromResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RemoveLFTagsFromResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      LFTags: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "LFTags"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RemoveLFTagsFromResourceCommand");
var se_RevokePermissionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/RevokePermissions");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Condition: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Condition"),
      Permissions: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Permissions"),
      PermissionsWithGrantOption: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "PermissionsWithGrantOption"),
      Principal: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Principal"),
      Resource: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Resource")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_RevokePermissionsCommand");
var se_SearchDatabasesByLFTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/SearchDatabasesByLFTags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Expression: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Expression"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchDatabasesByLFTagsCommand");
var se_SearchTablesByLFTagsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/SearchTablesByLFTags");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Expression: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Expression"),
      MaxResults: [],
      NextToken: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_SearchTablesByLFTagsCommand");
var se_StartQueryPlanningCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartQueryPlanning");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      QueryPlanningContext: /* @__PURE__ */ __name((_) => se_QueryPlanningContext(_, context), "QueryPlanningContext"),
      QueryString: []
    })
  );
  let { hostname: resolvedHostname } = await context.endpoint();
  if (context.disableHostPrefix !== true) {
    resolvedHostname = "query-" + resolvedHostname;
    if (!(0, import_protocol_http.isValidHostname)(resolvedHostname)) {
      throw new Error("ValidationError: prefixed hostname must be hostname compatible.");
    }
  }
  b.hn(resolvedHostname);
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartQueryPlanningCommand");
var se_StartTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/StartTransaction");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TransactionType: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_StartTransactionCommand");
var se_UpdateDataCellsFilterCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateDataCellsFilter");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      TableData: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TableData")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateDataCellsFilterCommand");
var se_UpdateLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLakeFormationIdentityCenterConfiguration");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ApplicationStatus: [],
      CatalogId: [],
      ExternalFiltering: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ExternalFiltering"),
      ShareRecipients: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "ShareRecipients")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLakeFormationIdentityCenterConfigurationCommand");
var se_UpdateLFTagCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLFTag");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      TagKey: [],
      TagValuesToAdd: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagValuesToAdd"),
      TagValuesToDelete: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "TagValuesToDelete")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLFTagCommand");
var se_UpdateLFTagExpressionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateLFTagExpression");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      Description: [],
      Expression: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "Expression"),
      Name: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateLFTagExpressionCommand");
var se_UpdateResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateResource");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      HybridAccessEnabled: [],
      ResourceArn: [],
      RoleArn: [],
      WithFederation: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateResourceCommand");
var se_UpdateTableObjectsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateTableObjects");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DatabaseName: [],
      TableName: [],
      TransactionId: [],
      WriteOperations: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "WriteOperations")
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateTableObjectsCommand");
var se_UpdateTableStorageOptimizerCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/UpdateTableStorageOptimizer");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      CatalogId: [],
      DatabaseName: [],
      StorageOptimizerConfig: /* @__PURE__ */ __name((_) => (0, import_smithy_client._json)(_), "StorageOptimizerConfig"),
      TableName: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_UpdateTableStorageOptimizerCommand");
var de_AddLFTagsToResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Failures: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AddLFTagsToResourceCommand");
var de_AssumeDecoratedRoleWithSAMLCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessKeyId: import_smithy_client.expectString,
    Expiration: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "Expiration"),
    SecretAccessKey: import_smithy_client.expectString,
    SessionToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssumeDecoratedRoleWithSAMLCommand");
var de_BatchGrantPermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Failures: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchGrantPermissionsCommand");
var de_BatchRevokePermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Failures: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchRevokePermissionsCommand");
var de_CancelTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CancelTransactionCommand");
var de_CommitTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    TransactionStatus: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CommitTransactionCommand");
var de_CreateDataCellsFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateDataCellsFilterCommand");
var de_CreateLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateLakeFormationIdentityCenterConfigurationCommand");
var de_CreateLakeFormationOptInCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateLakeFormationOptInCommand");
var de_CreateLFTagCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateLFTagCommand");
var de_CreateLFTagExpressionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_CreateLFTagExpressionCommand");
var de_DeleteDataCellsFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDataCellsFilterCommand");
var de_DeleteLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLakeFormationIdentityCenterConfigurationCommand");
var de_DeleteLakeFormationOptInCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLakeFormationOptInCommand");
var de_DeleteLFTagCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLFTagCommand");
var de_DeleteLFTagExpressionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteLFTagExpressionCommand");
var de_DeleteObjectsOnCancelCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteObjectsOnCancelCommand");
var de_DeregisterResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeregisterResourceCommand");
var de_DescribeLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ApplicationArn: import_smithy_client.expectString,
    CatalogId: import_smithy_client.expectString,
    ExternalFiltering: import_smithy_client._json,
    InstanceArn: import_smithy_client.expectString,
    ResourceShare: import_smithy_client.expectString,
    ShareRecipients: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeLakeFormationIdentityCenterConfigurationCommand");
var de_DescribeResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ResourceInfo: /* @__PURE__ */ __name((_) => de_ResourceInfo(_, context), "ResourceInfo")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeResourceCommand");
var de_DescribeTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    TransactionDescription: /* @__PURE__ */ __name((_) => de_TransactionDescription(_, context), "TransactionDescription")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeTransactionCommand");
var de_ExtendTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_ExtendTransactionCommand");
var de_GetDataCellsFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataCellsFilter: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataCellsFilterCommand");
var de_GetDataLakePrincipalCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Identity: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataLakePrincipalCommand");
var de_GetDataLakeSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataLakeSettings: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDataLakeSettingsCommand");
var de_GetEffectivePermissionsForPathCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Permissions: /* @__PURE__ */ __name((_) => de_PrincipalResourcePermissionsList(_, context), "Permissions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetEffectivePermissionsForPathCommand");
var de_GetLFTagCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CatalogId: import_smithy_client.expectString,
    TagKey: import_smithy_client.expectString,
    TagValues: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetLFTagCommand");
var de_GetLFTagExpressionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    CatalogId: import_smithy_client.expectString,
    Description: import_smithy_client.expectString,
    Expression: import_smithy_client._json,
    Name: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetLFTagExpressionCommand");
var de_GetQueryStateCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Error: import_smithy_client.expectString,
    State: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetQueryStateCommand");
var de_GetQueryStatisticsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    ExecutionStatistics: import_smithy_client._json,
    PlanningStatistics: import_smithy_client._json,
    QuerySubmissionTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(_)), "QuerySubmissionTime")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetQueryStatisticsCommand");
var de_GetResourceLFTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LFTagOnDatabase: import_smithy_client._json,
    LFTagsOnColumns: import_smithy_client._json,
    LFTagsOnTable: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetResourceLFTagsCommand");
var de_GetTableObjectsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Objects: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTableObjectsCommand");
var de_GetTemporaryGluePartitionCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessKeyId: import_smithy_client.expectString,
    Expiration: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "Expiration"),
    SecretAccessKey: import_smithy_client.expectString,
    SessionToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTemporaryGluePartitionCredentialsCommand");
var de_GetTemporaryGlueTableCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    AccessKeyId: import_smithy_client.expectString,
    Expiration: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "Expiration"),
    SecretAccessKey: import_smithy_client.expectString,
    SessionToken: import_smithy_client.expectString,
    VendedS3Path: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetTemporaryGlueTableCredentialsCommand");
var de_GetWorkUnitResultsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = output.body;
  context.sdkStreamMixin(data);
  contents.ResultStream = data;
  return contents;
}, "de_GetWorkUnitResultsCommand");
var de_GetWorkUnitsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    QueryId: import_smithy_client.expectString,
    WorkUnitRanges: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetWorkUnitsCommand");
var de_GrantPermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_GrantPermissionsCommand");
var de_ListDataCellsFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DataCellsFilters: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDataCellsFilterCommand");
var de_ListLakeFormationOptInsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LakeFormationOptInsInfoList: /* @__PURE__ */ __name((_) => de_LakeFormationOptInsInfoList(_, context), "LakeFormationOptInsInfoList"),
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLakeFormationOptInsCommand");
var de_ListLFTagExpressionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LFTagExpressions: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLFTagExpressionsCommand");
var de_ListLFTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    LFTags: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListLFTagsCommand");
var de_ListPermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    PrincipalResourcePermissions: /* @__PURE__ */ __name((_) => de_PrincipalResourcePermissionsList(_, context), "PrincipalResourcePermissions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListPermissionsCommand");
var de_ListResourcesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    ResourceInfoList: /* @__PURE__ */ __name((_) => de_ResourceInfoList(_, context), "ResourceInfoList")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListResourcesCommand");
var de_ListTableStorageOptimizersCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    StorageOptimizerList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTableStorageOptimizersCommand");
var de_ListTransactionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    Transactions: /* @__PURE__ */ __name((_) => de_TransactionDescriptionList(_, context), "Transactions")
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTransactionsCommand");
var de_PutDataLakeSettingsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_PutDataLakeSettingsCommand");
var de_RegisterResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RegisterResourceCommand");
var de_RemoveLFTagsFromResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Failures: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_RemoveLFTagsFromResourceCommand");
var de_RevokePermissionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_RevokePermissionsCommand");
var de_SearchDatabasesByLFTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    DatabaseList: import_smithy_client._json,
    NextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchDatabasesByLFTagsCommand");
var de_SearchTablesByLFTagsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    NextToken: import_smithy_client.expectString,
    TableList: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_SearchTablesByLFTagsCommand");
var de_StartQueryPlanningCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    QueryId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartQueryPlanningCommand");
var de_StartTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    TransactionId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_StartTransactionCommand");
var de_UpdateDataCellsFilterCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateDataCellsFilterCommand");
var de_UpdateLakeFormationIdentityCenterConfigurationCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateLakeFormationIdentityCenterConfigurationCommand");
var de_UpdateLFTagCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateLFTagCommand");
var de_UpdateLFTagExpressionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateLFTagExpressionCommand");
var de_UpdateResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateResourceCommand");
var de_UpdateTableObjectsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UpdateTableObjectsCommand");
var de_UpdateTableStorageOptimizerCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    Result: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateTableStorageOptimizerCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "AccessDeniedException":
    case "com.amazonaws.lakeformation#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ConcurrentModificationException":
    case "com.amazonaws.lakeformation#ConcurrentModificationException":
      throw await de_ConcurrentModificationExceptionRes(parsedOutput, context);
    case "EntityNotFoundException":
    case "com.amazonaws.lakeformation#EntityNotFoundException":
      throw await de_EntityNotFoundExceptionRes(parsedOutput, context);
    case "InternalServiceException":
    case "com.amazonaws.lakeformation#InternalServiceException":
      throw await de_InternalServiceExceptionRes(parsedOutput, context);
    case "InvalidInputException":
    case "com.amazonaws.lakeformation#InvalidInputException":
      throw await de_InvalidInputExceptionRes(parsedOutput, context);
    case "OperationTimeoutException":
    case "com.amazonaws.lakeformation#OperationTimeoutException":
      throw await de_OperationTimeoutExceptionRes(parsedOutput, context);
    case "TransactionCommitInProgressException":
    case "com.amazonaws.lakeformation#TransactionCommitInProgressException":
      throw await de_TransactionCommitInProgressExceptionRes(parsedOutput, context);
    case "TransactionCommittedException":
    case "com.amazonaws.lakeformation#TransactionCommittedException":
      throw await de_TransactionCommittedExceptionRes(parsedOutput, context);
    case "TransactionCanceledException":
    case "com.amazonaws.lakeformation#TransactionCanceledException":
      throw await de_TransactionCanceledExceptionRes(parsedOutput, context);
    case "AlreadyExistsException":
    case "com.amazonaws.lakeformation#AlreadyExistsException":
      throw await de_AlreadyExistsExceptionRes(parsedOutput, context);
    case "ResourceNumberLimitExceededException":
    case "com.amazonaws.lakeformation#ResourceNumberLimitExceededException":
      throw await de_ResourceNumberLimitExceededExceptionRes(parsedOutput, context);
    case "ResourceNotReadyException":
    case "com.amazonaws.lakeformation#ResourceNotReadyException":
      throw await de_ResourceNotReadyExceptionRes(parsedOutput, context);
    case "ExpiredException":
    case "com.amazonaws.lakeformation#ExpiredException":
      throw await de_ExpiredExceptionRes(parsedOutput, context);
    case "StatisticsNotReadyYetException":
    case "com.amazonaws.lakeformation#StatisticsNotReadyYetException":
      throw await de_StatisticsNotReadyYetExceptionRes(parsedOutput, context);
    case "ThrottledException":
    case "com.amazonaws.lakeformation#ThrottledException":
      throw await de_ThrottledExceptionRes(parsedOutput, context);
    case "GlueEncryptionException":
    case "com.amazonaws.lakeformation#GlueEncryptionException":
      throw await de_GlueEncryptionExceptionRes(parsedOutput, context);
    case "PermissionTypeMismatchException":
    case "com.amazonaws.lakeformation#PermissionTypeMismatchException":
      throw await de_PermissionTypeMismatchExceptionRes(parsedOutput, context);
    case "WorkUnitsNotReadyYetException":
    case "com.amazonaws.lakeformation#WorkUnitsNotReadyYetException":
      throw await de_WorkUnitsNotReadyYetExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(LakeFormationServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_AlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AlreadyExistsException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AlreadyExistsExceptionRes");
var de_ConcurrentModificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConcurrentModificationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConcurrentModificationExceptionRes");
var de_EntityNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new EntityNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_EntityNotFoundExceptionRes");
var de_ExpiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ExpiredException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ExpiredExceptionRes");
var de_GlueEncryptionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new GlueEncryptionException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_GlueEncryptionExceptionRes");
var de_InternalServiceExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServiceException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServiceExceptionRes");
var de_InvalidInputExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InvalidInputException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InvalidInputExceptionRes");
var de_OperationTimeoutExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new OperationTimeoutException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_OperationTimeoutExceptionRes");
var de_PermissionTypeMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new PermissionTypeMismatchException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_PermissionTypeMismatchExceptionRes");
var de_ResourceNotReadyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotReadyException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotReadyExceptionRes");
var de_ResourceNumberLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNumberLimitExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNumberLimitExceededExceptionRes");
var de_StatisticsNotReadyYetExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new StatisticsNotReadyYetException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_StatisticsNotReadyYetExceptionRes");
var de_ThrottledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottledExceptionRes");
var de_TransactionCanceledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TransactionCanceledException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TransactionCanceledExceptionRes");
var de_TransactionCommitInProgressExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TransactionCommitInProgressException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TransactionCommitInProgressExceptionRes");
var de_TransactionCommittedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new TransactionCommittedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_TransactionCommittedExceptionRes");
var de_WorkUnitsNotReadyYetExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    Message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new WorkUnitsNotReadyYetException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_WorkUnitsNotReadyYetExceptionRes");
var se_QueryPlanningContext = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    CatalogId: [],
    DatabaseName: [],
    QueryAsOfTime: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "QueryAsOfTime"),
    QueryParameters: import_smithy_client._json,
    TransactionId: []
  });
}, "se_QueryPlanningContext");
var se_QuerySessionContext = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    AdditionalContext: import_smithy_client._json,
    ClusterId: [],
    QueryAuthorizationId: [],
    QueryId: [],
    QueryStartTime: /* @__PURE__ */ __name((_) => _.getTime() / 1e3, "QueryStartTime")
  });
}, "se_QuerySessionContext");
var de_LakeFormationOptInsInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    Condition: import_smithy_client._json,
    LastModified: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModified"),
    LastUpdatedBy: import_smithy_client.expectString,
    Principal: import_smithy_client._json,
    Resource: import_smithy_client._json
  });
}, "de_LakeFormationOptInsInfo");
var de_LakeFormationOptInsInfoList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_LakeFormationOptInsInfo(entry, context);
  });
  return retVal;
}, "de_LakeFormationOptInsInfoList");
var de_PrincipalResourcePermissions = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    AdditionalDetails: import_smithy_client._json,
    Condition: import_smithy_client._json,
    LastUpdated: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastUpdated"),
    LastUpdatedBy: import_smithy_client.expectString,
    Permissions: import_smithy_client._json,
    PermissionsWithGrantOption: import_smithy_client._json,
    Principal: import_smithy_client._json,
    Resource: import_smithy_client._json
  });
}, "de_PrincipalResourcePermissions");
var de_PrincipalResourcePermissionsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_PrincipalResourcePermissions(entry, context);
  });
  return retVal;
}, "de_PrincipalResourcePermissionsList");
var de_ResourceInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    HybridAccessEnabled: import_smithy_client.expectBoolean,
    LastModified: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "LastModified"),
    ResourceArn: import_smithy_client.expectString,
    RoleArn: import_smithy_client.expectString,
    WithFederation: import_smithy_client.expectBoolean,
    WithPrivilegedAccess: import_smithy_client.expectBoolean
  });
}, "de_ResourceInfo");
var de_ResourceInfoList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ResourceInfo(entry, context);
  });
  return retVal;
}, "de_ResourceInfoList");
var de_TransactionDescription = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    TransactionEndTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "TransactionEndTime"),
    TransactionId: import_smithy_client.expectString,
    TransactionStartTime: /* @__PURE__ */ __name((_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))), "TransactionStartTime"),
    TransactionStatus: import_smithy_client.expectString
  });
}, "de_TransactionDescription");
var de_TransactionDescriptionList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_TransactionDescription(entry, context);
  });
  return retVal;
}, "de_TransactionDescriptionList");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");

// src/commands/AddLFTagsToResourceCommand.ts
var AddLFTagsToResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "AddLFTagsToResource", {}).n("LakeFormationClient", "AddLFTagsToResourceCommand").f(void 0, void 0).ser(se_AddLFTagsToResourceCommand).de(de_AddLFTagsToResourceCommand).build() {
  static {
    __name(this, "AddLFTagsToResourceCommand");
  }
};

// src/commands/AssumeDecoratedRoleWithSAMLCommand.ts



var AssumeDecoratedRoleWithSAMLCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "AssumeDecoratedRoleWithSAML", {}).n("LakeFormationClient", "AssumeDecoratedRoleWithSAMLCommand").f(void 0, void 0).ser(se_AssumeDecoratedRoleWithSAMLCommand).de(de_AssumeDecoratedRoleWithSAMLCommand).build() {
  static {
    __name(this, "AssumeDecoratedRoleWithSAMLCommand");
  }
};

// src/commands/BatchGrantPermissionsCommand.ts



var BatchGrantPermissionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "BatchGrantPermissions", {}).n("LakeFormationClient", "BatchGrantPermissionsCommand").f(void 0, void 0).ser(se_BatchGrantPermissionsCommand).de(de_BatchGrantPermissionsCommand).build() {
  static {
    __name(this, "BatchGrantPermissionsCommand");
  }
};

// src/commands/BatchRevokePermissionsCommand.ts



var BatchRevokePermissionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "BatchRevokePermissions", {}).n("LakeFormationClient", "BatchRevokePermissionsCommand").f(void 0, void 0).ser(se_BatchRevokePermissionsCommand).de(de_BatchRevokePermissionsCommand).build() {
  static {
    __name(this, "BatchRevokePermissionsCommand");
  }
};

// src/commands/CancelTransactionCommand.ts



var CancelTransactionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CancelTransaction", {}).n("LakeFormationClient", "CancelTransactionCommand").f(void 0, void 0).ser(se_CancelTransactionCommand).de(de_CancelTransactionCommand).build() {
  static {
    __name(this, "CancelTransactionCommand");
  }
};

// src/commands/CommitTransactionCommand.ts



var CommitTransactionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CommitTransaction", {}).n("LakeFormationClient", "CommitTransactionCommand").f(void 0, void 0).ser(se_CommitTransactionCommand).de(de_CommitTransactionCommand).build() {
  static {
    __name(this, "CommitTransactionCommand");
  }
};

// src/commands/CreateDataCellsFilterCommand.ts



var CreateDataCellsFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CreateDataCellsFilter", {}).n("LakeFormationClient", "CreateDataCellsFilterCommand").f(void 0, void 0).ser(se_CreateDataCellsFilterCommand).de(de_CreateDataCellsFilterCommand).build() {
  static {
    __name(this, "CreateDataCellsFilterCommand");
  }
};

// src/commands/CreateLakeFormationIdentityCenterConfigurationCommand.ts



var CreateLakeFormationIdentityCenterConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CreateLakeFormationIdentityCenterConfiguration", {}).n("LakeFormationClient", "CreateLakeFormationIdentityCenterConfigurationCommand").f(void 0, void 0).ser(se_CreateLakeFormationIdentityCenterConfigurationCommand).de(de_CreateLakeFormationIdentityCenterConfigurationCommand).build() {
  static {
    __name(this, "CreateLakeFormationIdentityCenterConfigurationCommand");
  }
};

// src/commands/CreateLakeFormationOptInCommand.ts



var CreateLakeFormationOptInCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CreateLakeFormationOptIn", {}).n("LakeFormationClient", "CreateLakeFormationOptInCommand").f(void 0, void 0).ser(se_CreateLakeFormationOptInCommand).de(de_CreateLakeFormationOptInCommand).build() {
  static {
    __name(this, "CreateLakeFormationOptInCommand");
  }
};

// src/commands/CreateLFTagCommand.ts



var CreateLFTagCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CreateLFTag", {}).n("LakeFormationClient", "CreateLFTagCommand").f(void 0, void 0).ser(se_CreateLFTagCommand).de(de_CreateLFTagCommand).build() {
  static {
    __name(this, "CreateLFTagCommand");
  }
};

// src/commands/CreateLFTagExpressionCommand.ts



var CreateLFTagExpressionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "CreateLFTagExpression", {}).n("LakeFormationClient", "CreateLFTagExpressionCommand").f(void 0, void 0).ser(se_CreateLFTagExpressionCommand).de(de_CreateLFTagExpressionCommand).build() {
  static {
    __name(this, "CreateLFTagExpressionCommand");
  }
};

// src/commands/DeleteDataCellsFilterCommand.ts



var DeleteDataCellsFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteDataCellsFilter", {}).n("LakeFormationClient", "DeleteDataCellsFilterCommand").f(void 0, void 0).ser(se_DeleteDataCellsFilterCommand).de(de_DeleteDataCellsFilterCommand).build() {
  static {
    __name(this, "DeleteDataCellsFilterCommand");
  }
};

// src/commands/DeleteLakeFormationIdentityCenterConfigurationCommand.ts



var DeleteLakeFormationIdentityCenterConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteLakeFormationIdentityCenterConfiguration", {}).n("LakeFormationClient", "DeleteLakeFormationIdentityCenterConfigurationCommand").f(void 0, void 0).ser(se_DeleteLakeFormationIdentityCenterConfigurationCommand).de(de_DeleteLakeFormationIdentityCenterConfigurationCommand).build() {
  static {
    __name(this, "DeleteLakeFormationIdentityCenterConfigurationCommand");
  }
};

// src/commands/DeleteLakeFormationOptInCommand.ts



var DeleteLakeFormationOptInCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteLakeFormationOptIn", {}).n("LakeFormationClient", "DeleteLakeFormationOptInCommand").f(void 0, void 0).ser(se_DeleteLakeFormationOptInCommand).de(de_DeleteLakeFormationOptInCommand).build() {
  static {
    __name(this, "DeleteLakeFormationOptInCommand");
  }
};

// src/commands/DeleteLFTagCommand.ts



var DeleteLFTagCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteLFTag", {}).n("LakeFormationClient", "DeleteLFTagCommand").f(void 0, void 0).ser(se_DeleteLFTagCommand).de(de_DeleteLFTagCommand).build() {
  static {
    __name(this, "DeleteLFTagCommand");
  }
};

// src/commands/DeleteLFTagExpressionCommand.ts



var DeleteLFTagExpressionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteLFTagExpression", {}).n("LakeFormationClient", "DeleteLFTagExpressionCommand").f(void 0, void 0).ser(se_DeleteLFTagExpressionCommand).de(de_DeleteLFTagExpressionCommand).build() {
  static {
    __name(this, "DeleteLFTagExpressionCommand");
  }
};

// src/commands/DeleteObjectsOnCancelCommand.ts



var DeleteObjectsOnCancelCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeleteObjectsOnCancel", {}).n("LakeFormationClient", "DeleteObjectsOnCancelCommand").f(void 0, void 0).ser(se_DeleteObjectsOnCancelCommand).de(de_DeleteObjectsOnCancelCommand).build() {
  static {
    __name(this, "DeleteObjectsOnCancelCommand");
  }
};

// src/commands/DeregisterResourceCommand.ts



var DeregisterResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DeregisterResource", {}).n("LakeFormationClient", "DeregisterResourceCommand").f(void 0, void 0).ser(se_DeregisterResourceCommand).de(de_DeregisterResourceCommand).build() {
  static {
    __name(this, "DeregisterResourceCommand");
  }
};

// src/commands/DescribeLakeFormationIdentityCenterConfigurationCommand.ts



var DescribeLakeFormationIdentityCenterConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DescribeLakeFormationIdentityCenterConfiguration", {}).n("LakeFormationClient", "DescribeLakeFormationIdentityCenterConfigurationCommand").f(void 0, void 0).ser(se_DescribeLakeFormationIdentityCenterConfigurationCommand).de(de_DescribeLakeFormationIdentityCenterConfigurationCommand).build() {
  static {
    __name(this, "DescribeLakeFormationIdentityCenterConfigurationCommand");
  }
};

// src/commands/DescribeResourceCommand.ts



var DescribeResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DescribeResource", {}).n("LakeFormationClient", "DescribeResourceCommand").f(void 0, void 0).ser(se_DescribeResourceCommand).de(de_DescribeResourceCommand).build() {
  static {
    __name(this, "DescribeResourceCommand");
  }
};

// src/commands/DescribeTransactionCommand.ts



var DescribeTransactionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "DescribeTransaction", {}).n("LakeFormationClient", "DescribeTransactionCommand").f(void 0, void 0).ser(se_DescribeTransactionCommand).de(de_DescribeTransactionCommand).build() {
  static {
    __name(this, "DescribeTransactionCommand");
  }
};

// src/commands/ExtendTransactionCommand.ts



var ExtendTransactionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ExtendTransaction", {}).n("LakeFormationClient", "ExtendTransactionCommand").f(void 0, void 0).ser(se_ExtendTransactionCommand).de(de_ExtendTransactionCommand).build() {
  static {
    __name(this, "ExtendTransactionCommand");
  }
};

// src/commands/GetDataCellsFilterCommand.ts



var GetDataCellsFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetDataCellsFilter", {}).n("LakeFormationClient", "GetDataCellsFilterCommand").f(void 0, void 0).ser(se_GetDataCellsFilterCommand).de(de_GetDataCellsFilterCommand).build() {
  static {
    __name(this, "GetDataCellsFilterCommand");
  }
};

// src/commands/GetDataLakePrincipalCommand.ts



var GetDataLakePrincipalCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetDataLakePrincipal", {}).n("LakeFormationClient", "GetDataLakePrincipalCommand").f(void 0, void 0).ser(se_GetDataLakePrincipalCommand).de(de_GetDataLakePrincipalCommand).build() {
  static {
    __name(this, "GetDataLakePrincipalCommand");
  }
};

// src/commands/GetDataLakeSettingsCommand.ts



var GetDataLakeSettingsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetDataLakeSettings", {}).n("LakeFormationClient", "GetDataLakeSettingsCommand").f(void 0, void 0).ser(se_GetDataLakeSettingsCommand).de(de_GetDataLakeSettingsCommand).build() {
  static {
    __name(this, "GetDataLakeSettingsCommand");
  }
};

// src/commands/GetEffectivePermissionsForPathCommand.ts



var GetEffectivePermissionsForPathCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetEffectivePermissionsForPath", {}).n("LakeFormationClient", "GetEffectivePermissionsForPathCommand").f(void 0, void 0).ser(se_GetEffectivePermissionsForPathCommand).de(de_GetEffectivePermissionsForPathCommand).build() {
  static {
    __name(this, "GetEffectivePermissionsForPathCommand");
  }
};

// src/commands/GetLFTagCommand.ts



var GetLFTagCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetLFTag", {}).n("LakeFormationClient", "GetLFTagCommand").f(void 0, void 0).ser(se_GetLFTagCommand).de(de_GetLFTagCommand).build() {
  static {
    __name(this, "GetLFTagCommand");
  }
};

// src/commands/GetLFTagExpressionCommand.ts



var GetLFTagExpressionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetLFTagExpression", {}).n("LakeFormationClient", "GetLFTagExpressionCommand").f(void 0, void 0).ser(se_GetLFTagExpressionCommand).de(de_GetLFTagExpressionCommand).build() {
  static {
    __name(this, "GetLFTagExpressionCommand");
  }
};

// src/commands/GetQueryStateCommand.ts



var GetQueryStateCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetQueryState", {}).n("LakeFormationClient", "GetQueryStateCommand").f(void 0, void 0).ser(se_GetQueryStateCommand).de(de_GetQueryStateCommand).build() {
  static {
    __name(this, "GetQueryStateCommand");
  }
};

// src/commands/GetQueryStatisticsCommand.ts



var GetQueryStatisticsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetQueryStatistics", {}).n("LakeFormationClient", "GetQueryStatisticsCommand").f(void 0, void 0).ser(se_GetQueryStatisticsCommand).de(de_GetQueryStatisticsCommand).build() {
  static {
    __name(this, "GetQueryStatisticsCommand");
  }
};

// src/commands/GetResourceLFTagsCommand.ts



var GetResourceLFTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetResourceLFTags", {}).n("LakeFormationClient", "GetResourceLFTagsCommand").f(void 0, void 0).ser(se_GetResourceLFTagsCommand).de(de_GetResourceLFTagsCommand).build() {
  static {
    __name(this, "GetResourceLFTagsCommand");
  }
};

// src/commands/GetTableObjectsCommand.ts



var GetTableObjectsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetTableObjects", {}).n("LakeFormationClient", "GetTableObjectsCommand").f(void 0, void 0).ser(se_GetTableObjectsCommand).de(de_GetTableObjectsCommand).build() {
  static {
    __name(this, "GetTableObjectsCommand");
  }
};

// src/commands/GetTemporaryGluePartitionCredentialsCommand.ts



var GetTemporaryGluePartitionCredentialsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetTemporaryGluePartitionCredentials", {}).n("LakeFormationClient", "GetTemporaryGluePartitionCredentialsCommand").f(void 0, void 0).ser(se_GetTemporaryGluePartitionCredentialsCommand).de(de_GetTemporaryGluePartitionCredentialsCommand).build() {
  static {
    __name(this, "GetTemporaryGluePartitionCredentialsCommand");
  }
};

// src/commands/GetTemporaryGlueTableCredentialsCommand.ts



var GetTemporaryGlueTableCredentialsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetTemporaryGlueTableCredentials", {}).n("LakeFormationClient", "GetTemporaryGlueTableCredentialsCommand").f(void 0, void 0).ser(se_GetTemporaryGlueTableCredentialsCommand).de(de_GetTemporaryGlueTableCredentialsCommand).build() {
  static {
    __name(this, "GetTemporaryGlueTableCredentialsCommand");
  }
};

// src/commands/GetWorkUnitResultsCommand.ts



var GetWorkUnitResultsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetWorkUnitResults", {}).n("LakeFormationClient", "GetWorkUnitResultsCommand").f(GetWorkUnitResultsRequestFilterSensitiveLog, GetWorkUnitResultsResponseFilterSensitiveLog).ser(se_GetWorkUnitResultsCommand).de(de_GetWorkUnitResultsCommand).build() {
  static {
    __name(this, "GetWorkUnitResultsCommand");
  }
};

// src/commands/GetWorkUnitsCommand.ts



var GetWorkUnitsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GetWorkUnits", {}).n("LakeFormationClient", "GetWorkUnitsCommand").f(void 0, void 0).ser(se_GetWorkUnitsCommand).de(de_GetWorkUnitsCommand).build() {
  static {
    __name(this, "GetWorkUnitsCommand");
  }
};

// src/commands/GrantPermissionsCommand.ts



var GrantPermissionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "GrantPermissions", {}).n("LakeFormationClient", "GrantPermissionsCommand").f(void 0, void 0).ser(se_GrantPermissionsCommand).de(de_GrantPermissionsCommand).build() {
  static {
    __name(this, "GrantPermissionsCommand");
  }
};

// src/commands/ListDataCellsFilterCommand.ts



var ListDataCellsFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListDataCellsFilter", {}).n("LakeFormationClient", "ListDataCellsFilterCommand").f(void 0, void 0).ser(se_ListDataCellsFilterCommand).de(de_ListDataCellsFilterCommand).build() {
  static {
    __name(this, "ListDataCellsFilterCommand");
  }
};

// src/commands/ListLakeFormationOptInsCommand.ts



var ListLakeFormationOptInsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListLakeFormationOptIns", {}).n("LakeFormationClient", "ListLakeFormationOptInsCommand").f(void 0, void 0).ser(se_ListLakeFormationOptInsCommand).de(de_ListLakeFormationOptInsCommand).build() {
  static {
    __name(this, "ListLakeFormationOptInsCommand");
  }
};

// src/commands/ListLFTagExpressionsCommand.ts



var ListLFTagExpressionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListLFTagExpressions", {}).n("LakeFormationClient", "ListLFTagExpressionsCommand").f(void 0, void 0).ser(se_ListLFTagExpressionsCommand).de(de_ListLFTagExpressionsCommand).build() {
  static {
    __name(this, "ListLFTagExpressionsCommand");
  }
};

// src/commands/ListLFTagsCommand.ts



var ListLFTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListLFTags", {}).n("LakeFormationClient", "ListLFTagsCommand").f(void 0, void 0).ser(se_ListLFTagsCommand).de(de_ListLFTagsCommand).build() {
  static {
    __name(this, "ListLFTagsCommand");
  }
};

// src/commands/ListPermissionsCommand.ts



var ListPermissionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListPermissions", {}).n("LakeFormationClient", "ListPermissionsCommand").f(void 0, void 0).ser(se_ListPermissionsCommand).de(de_ListPermissionsCommand).build() {
  static {
    __name(this, "ListPermissionsCommand");
  }
};

// src/commands/ListResourcesCommand.ts



var ListResourcesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListResources", {}).n("LakeFormationClient", "ListResourcesCommand").f(void 0, void 0).ser(se_ListResourcesCommand).de(de_ListResourcesCommand).build() {
  static {
    __name(this, "ListResourcesCommand");
  }
};

// src/commands/ListTableStorageOptimizersCommand.ts



var ListTableStorageOptimizersCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListTableStorageOptimizers", {}).n("LakeFormationClient", "ListTableStorageOptimizersCommand").f(void 0, void 0).ser(se_ListTableStorageOptimizersCommand).de(de_ListTableStorageOptimizersCommand).build() {
  static {
    __name(this, "ListTableStorageOptimizersCommand");
  }
};

// src/commands/ListTransactionsCommand.ts



var ListTransactionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "ListTransactions", {}).n("LakeFormationClient", "ListTransactionsCommand").f(void 0, void 0).ser(se_ListTransactionsCommand).de(de_ListTransactionsCommand).build() {
  static {
    __name(this, "ListTransactionsCommand");
  }
};

// src/commands/PutDataLakeSettingsCommand.ts



var PutDataLakeSettingsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "PutDataLakeSettings", {}).n("LakeFormationClient", "PutDataLakeSettingsCommand").f(void 0, void 0).ser(se_PutDataLakeSettingsCommand).de(de_PutDataLakeSettingsCommand).build() {
  static {
    __name(this, "PutDataLakeSettingsCommand");
  }
};

// src/commands/RegisterResourceCommand.ts



var RegisterResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "RegisterResource", {}).n("LakeFormationClient", "RegisterResourceCommand").f(void 0, void 0).ser(se_RegisterResourceCommand).de(de_RegisterResourceCommand).build() {
  static {
    __name(this, "RegisterResourceCommand");
  }
};

// src/commands/RemoveLFTagsFromResourceCommand.ts



var RemoveLFTagsFromResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "RemoveLFTagsFromResource", {}).n("LakeFormationClient", "RemoveLFTagsFromResourceCommand").f(void 0, void 0).ser(se_RemoveLFTagsFromResourceCommand).de(de_RemoveLFTagsFromResourceCommand).build() {
  static {
    __name(this, "RemoveLFTagsFromResourceCommand");
  }
};

// src/commands/RevokePermissionsCommand.ts



var RevokePermissionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "RevokePermissions", {}).n("LakeFormationClient", "RevokePermissionsCommand").f(void 0, void 0).ser(se_RevokePermissionsCommand).de(de_RevokePermissionsCommand).build() {
  static {
    __name(this, "RevokePermissionsCommand");
  }
};

// src/commands/SearchDatabasesByLFTagsCommand.ts



var SearchDatabasesByLFTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "SearchDatabasesByLFTags", {}).n("LakeFormationClient", "SearchDatabasesByLFTagsCommand").f(void 0, void 0).ser(se_SearchDatabasesByLFTagsCommand).de(de_SearchDatabasesByLFTagsCommand).build() {
  static {
    __name(this, "SearchDatabasesByLFTagsCommand");
  }
};

// src/commands/SearchTablesByLFTagsCommand.ts



var SearchTablesByLFTagsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "SearchTablesByLFTags", {}).n("LakeFormationClient", "SearchTablesByLFTagsCommand").f(void 0, void 0).ser(se_SearchTablesByLFTagsCommand).de(de_SearchTablesByLFTagsCommand).build() {
  static {
    __name(this, "SearchTablesByLFTagsCommand");
  }
};

// src/commands/StartQueryPlanningCommand.ts



var StartQueryPlanningCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "StartQueryPlanning", {}).n("LakeFormationClient", "StartQueryPlanningCommand").f(StartQueryPlanningRequestFilterSensitiveLog, void 0).ser(se_StartQueryPlanningCommand).de(de_StartQueryPlanningCommand).build() {
  static {
    __name(this, "StartQueryPlanningCommand");
  }
};

// src/commands/StartTransactionCommand.ts



var StartTransactionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "StartTransaction", {}).n("LakeFormationClient", "StartTransactionCommand").f(void 0, void 0).ser(se_StartTransactionCommand).de(de_StartTransactionCommand).build() {
  static {
    __name(this, "StartTransactionCommand");
  }
};

// src/commands/UpdateDataCellsFilterCommand.ts



var UpdateDataCellsFilterCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateDataCellsFilter", {}).n("LakeFormationClient", "UpdateDataCellsFilterCommand").f(void 0, void 0).ser(se_UpdateDataCellsFilterCommand).de(de_UpdateDataCellsFilterCommand).build() {
  static {
    __name(this, "UpdateDataCellsFilterCommand");
  }
};

// src/commands/UpdateLakeFormationIdentityCenterConfigurationCommand.ts



var UpdateLakeFormationIdentityCenterConfigurationCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateLakeFormationIdentityCenterConfiguration", {}).n("LakeFormationClient", "UpdateLakeFormationIdentityCenterConfigurationCommand").f(void 0, void 0).ser(se_UpdateLakeFormationIdentityCenterConfigurationCommand).de(de_UpdateLakeFormationIdentityCenterConfigurationCommand).build() {
  static {
    __name(this, "UpdateLakeFormationIdentityCenterConfigurationCommand");
  }
};

// src/commands/UpdateLFTagCommand.ts



var UpdateLFTagCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateLFTag", {}).n("LakeFormationClient", "UpdateLFTagCommand").f(void 0, void 0).ser(se_UpdateLFTagCommand).de(de_UpdateLFTagCommand).build() {
  static {
    __name(this, "UpdateLFTagCommand");
  }
};

// src/commands/UpdateLFTagExpressionCommand.ts



var UpdateLFTagExpressionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateLFTagExpression", {}).n("LakeFormationClient", "UpdateLFTagExpressionCommand").f(void 0, void 0).ser(se_UpdateLFTagExpressionCommand).de(de_UpdateLFTagExpressionCommand).build() {
  static {
    __name(this, "UpdateLFTagExpressionCommand");
  }
};

// src/commands/UpdateResourceCommand.ts



var UpdateResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateResource", {}).n("LakeFormationClient", "UpdateResourceCommand").f(void 0, void 0).ser(se_UpdateResourceCommand).de(de_UpdateResourceCommand).build() {
  static {
    __name(this, "UpdateResourceCommand");
  }
};

// src/commands/UpdateTableObjectsCommand.ts



var UpdateTableObjectsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateTableObjects", {}).n("LakeFormationClient", "UpdateTableObjectsCommand").f(void 0, void 0).ser(se_UpdateTableObjectsCommand).de(de_UpdateTableObjectsCommand).build() {
  static {
    __name(this, "UpdateTableObjectsCommand");
  }
};

// src/commands/UpdateTableStorageOptimizerCommand.ts



var UpdateTableStorageOptimizerCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("AWSLakeFormation", "UpdateTableStorageOptimizer", {}).n("LakeFormationClient", "UpdateTableStorageOptimizerCommand").f(void 0, void 0).ser(se_UpdateTableStorageOptimizerCommand).de(de_UpdateTableStorageOptimizerCommand).build() {
  static {
    __name(this, "UpdateTableStorageOptimizerCommand");
  }
};

// src/LakeFormation.ts
var commands = {
  AddLFTagsToResourceCommand,
  AssumeDecoratedRoleWithSAMLCommand,
  BatchGrantPermissionsCommand,
  BatchRevokePermissionsCommand,
  CancelTransactionCommand,
  CommitTransactionCommand,
  CreateDataCellsFilterCommand,
  CreateLakeFormationIdentityCenterConfigurationCommand,
  CreateLakeFormationOptInCommand,
  CreateLFTagCommand,
  CreateLFTagExpressionCommand,
  DeleteDataCellsFilterCommand,
  DeleteLakeFormationIdentityCenterConfigurationCommand,
  DeleteLakeFormationOptInCommand,
  DeleteLFTagCommand,
  DeleteLFTagExpressionCommand,
  DeleteObjectsOnCancelCommand,
  DeregisterResourceCommand,
  DescribeLakeFormationIdentityCenterConfigurationCommand,
  DescribeResourceCommand,
  DescribeTransactionCommand,
  ExtendTransactionCommand,
  GetDataCellsFilterCommand,
  GetDataLakePrincipalCommand,
  GetDataLakeSettingsCommand,
  GetEffectivePermissionsForPathCommand,
  GetLFTagCommand,
  GetLFTagExpressionCommand,
  GetQueryStateCommand,
  GetQueryStatisticsCommand,
  GetResourceLFTagsCommand,
  GetTableObjectsCommand,
  GetTemporaryGluePartitionCredentialsCommand,
  GetTemporaryGlueTableCredentialsCommand,
  GetWorkUnitResultsCommand,
  GetWorkUnitsCommand,
  GrantPermissionsCommand,
  ListDataCellsFilterCommand,
  ListLakeFormationOptInsCommand,
  ListLFTagExpressionsCommand,
  ListLFTagsCommand,
  ListPermissionsCommand,
  ListResourcesCommand,
  ListTableStorageOptimizersCommand,
  ListTransactionsCommand,
  PutDataLakeSettingsCommand,
  RegisterResourceCommand,
  RemoveLFTagsFromResourceCommand,
  RevokePermissionsCommand,
  SearchDatabasesByLFTagsCommand,
  SearchTablesByLFTagsCommand,
  StartQueryPlanningCommand,
  StartTransactionCommand,
  UpdateDataCellsFilterCommand,
  UpdateLakeFormationIdentityCenterConfigurationCommand,
  UpdateLFTagCommand,
  UpdateLFTagExpressionCommand,
  UpdateResourceCommand,
  UpdateTableObjectsCommand,
  UpdateTableStorageOptimizerCommand
};
var LakeFormation = class extends LakeFormationClient {
  static {
    __name(this, "LakeFormation");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, LakeFormation);

// src/pagination/GetEffectivePermissionsForPathPaginator.ts

var paginateGetEffectivePermissionsForPath = (0, import_core.createPaginator)(LakeFormationClient, GetEffectivePermissionsForPathCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetTableObjectsPaginator.ts

var paginateGetTableObjects = (0, import_core.createPaginator)(LakeFormationClient, GetTableObjectsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/GetWorkUnitsPaginator.ts

var paginateGetWorkUnits = (0, import_core.createPaginator)(LakeFormationClient, GetWorkUnitsCommand, "NextToken", "NextToken", "PageSize");

// src/pagination/ListDataCellsFilterPaginator.ts

var paginateListDataCellsFilter = (0, import_core.createPaginator)(LakeFormationClient, ListDataCellsFilterCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLFTagExpressionsPaginator.ts

var paginateListLFTagExpressions = (0, import_core.createPaginator)(LakeFormationClient, ListLFTagExpressionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLFTagsPaginator.ts

var paginateListLFTags = (0, import_core.createPaginator)(LakeFormationClient, ListLFTagsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListLakeFormationOptInsPaginator.ts

var paginateListLakeFormationOptIns = (0, import_core.createPaginator)(LakeFormationClient, ListLakeFormationOptInsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListPermissionsPaginator.ts

var paginateListPermissions = (0, import_core.createPaginator)(LakeFormationClient, ListPermissionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListResourcesPaginator.ts

var paginateListResources = (0, import_core.createPaginator)(LakeFormationClient, ListResourcesCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTableStorageOptimizersPaginator.ts

var paginateListTableStorageOptimizers = (0, import_core.createPaginator)(LakeFormationClient, ListTableStorageOptimizersCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/ListTransactionsPaginator.ts

var paginateListTransactions = (0, import_core.createPaginator)(LakeFormationClient, ListTransactionsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/SearchDatabasesByLFTagsPaginator.ts

var paginateSearchDatabasesByLFTags = (0, import_core.createPaginator)(LakeFormationClient, SearchDatabasesByLFTagsCommand, "NextToken", "NextToken", "MaxResults");

// src/pagination/SearchTablesByLFTagsPaginator.ts

var paginateSearchTablesByLFTags = (0, import_core.createPaginator)(LakeFormationClient, SearchTablesByLFTagsCommand, "NextToken", "NextToken", "MaxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  LakeFormationServiceException,
  __Client,
  LakeFormationClient,
  LakeFormation,
  $Command,
  AddLFTagsToResourceCommand,
  AssumeDecoratedRoleWithSAMLCommand,
  BatchGrantPermissionsCommand,
  BatchRevokePermissionsCommand,
  CancelTransactionCommand,
  CommitTransactionCommand,
  CreateDataCellsFilterCommand,
  CreateLFTagCommand,
  CreateLFTagExpressionCommand,
  CreateLakeFormationIdentityCenterConfigurationCommand,
  CreateLakeFormationOptInCommand,
  DeleteDataCellsFilterCommand,
  DeleteLFTagCommand,
  DeleteLFTagExpressionCommand,
  DeleteLakeFormationIdentityCenterConfigurationCommand,
  DeleteLakeFormationOptInCommand,
  DeleteObjectsOnCancelCommand,
  DeregisterResourceCommand,
  DescribeLakeFormationIdentityCenterConfigurationCommand,
  DescribeResourceCommand,
  DescribeTransactionCommand,
  ExtendTransactionCommand,
  GetDataCellsFilterCommand,
  GetDataLakePrincipalCommand,
  GetDataLakeSettingsCommand,
  GetEffectivePermissionsForPathCommand,
  GetLFTagCommand,
  GetLFTagExpressionCommand,
  GetQueryStateCommand,
  GetQueryStatisticsCommand,
  GetResourceLFTagsCommand,
  GetTableObjectsCommand,
  GetTemporaryGluePartitionCredentialsCommand,
  GetTemporaryGlueTableCredentialsCommand,
  GetWorkUnitResultsCommand,
  GetWorkUnitsCommand,
  GrantPermissionsCommand,
  ListDataCellsFilterCommand,
  ListLFTagExpressionsCommand,
  ListLFTagsCommand,
  ListLakeFormationOptInsCommand,
  ListPermissionsCommand,
  ListResourcesCommand,
  ListTableStorageOptimizersCommand,
  ListTransactionsCommand,
  PutDataLakeSettingsCommand,
  RegisterResourceCommand,
  RemoveLFTagsFromResourceCommand,
  RevokePermissionsCommand,
  SearchDatabasesByLFTagsCommand,
  SearchTablesByLFTagsCommand,
  StartQueryPlanningCommand,
  StartTransactionCommand,
  UpdateDataCellsFilterCommand,
  UpdateLFTagCommand,
  UpdateLFTagExpressionCommand,
  UpdateLakeFormationIdentityCenterConfigurationCommand,
  UpdateResourceCommand,
  UpdateTableObjectsCommand,
  UpdateTableStorageOptimizerCommand,
  paginateGetEffectivePermissionsForPath,
  paginateGetTableObjects,
  paginateGetWorkUnits,
  paginateListDataCellsFilter,
  paginateListLFTagExpressions,
  paginateListLFTags,
  paginateListLakeFormationOptIns,
  paginateListPermissions,
  paginateListResources,
  paginateListTableStorageOptimizers,
  paginateListTransactions,
  paginateSearchDatabasesByLFTags,
  paginateSearchTablesByLFTags,
  AccessDeniedException,
  ResourceType,
  ConcurrentModificationException,
  EntityNotFoundException,
  InternalServiceException,
  InvalidInputException,
  OperationTimeoutException,
  AlreadyExistsException,
  ApplicationStatus,
  Permission,
  TransactionCommitInProgressException,
  TransactionCommittedException,
  TransactionStatus,
  TransactionCanceledException,
  ResourceNumberLimitExceededException,
  EnableStatus,
  ResourceNotReadyException,
  QueryStateString,
  ExpiredException,
  StatisticsNotReadyYetException,
  ThrottledException,
  GlueEncryptionException,
  PermissionType,
  PermissionTypeMismatchException,
  WorkUnitsNotReadyYetException,
  ResourceShareType,
  DataLakeResourceType,
  ComparisonOperator,
  FieldNameString,
  OptimizerType,
  TransactionStatusFilter,
  TransactionType,
  GetWorkUnitResultsRequestFilterSensitiveLog,
  GetWorkUnitResultsResponseFilterSensitiveLog,
  StartQueryPlanningRequestFilterSensitiveLog
});

