import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { StreamingBlobTypes } from "@smithy/types";
import { LakeFormationServiceException as __BaseException } from "./LakeFormationServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface LFTagPair {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
  TagValues: string[] | undefined;
}
export interface CatalogResource {
  Id?: string | undefined;
}
export interface DatabaseResource {
  CatalogId?: string | undefined;
  Name: string | undefined;
}
export interface DataCellsFilterResource {
  TableCatalogId?: string | undefined;
  DatabaseName?: string | undefined;
  TableName?: string | undefined;
  Name?: string | undefined;
}
export interface DataLocationResource {
  CatalogId?: string | undefined;
  ResourceArn: string | undefined;
}
export interface LFTagKeyResource {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
  TagValues: string[] | undefined;
}
export interface LFTagExpressionResource {
  CatalogId?: string | undefined;
  Name: string | undefined;
}
export interface LFTag {
  TagKey: string | undefined;
  TagValues: string[] | undefined;
}
export declare const ResourceType: {
  readonly DATABASE: "DATABASE";
  readonly TABLE: "TABLE";
};
export type ResourceType = (typeof ResourceType)[keyof typeof ResourceType];
export interface LFTagPolicyResource {
  CatalogId?: string | undefined;
  ResourceType: ResourceType | undefined;
  Expression?: LFTag[] | undefined;
  ExpressionName?: string | undefined;
}
export interface TableWildcard {}
export interface TableResource {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  Name?: string | undefined;
  TableWildcard?: TableWildcard | undefined;
}
export interface ColumnWildcard {
  ExcludedColumnNames?: string[] | undefined;
}
export interface TableWithColumnsResource {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  Name: string | undefined;
  ColumnNames?: string[] | undefined;
  ColumnWildcard?: ColumnWildcard | undefined;
}
export interface Resource {
  Catalog?: CatalogResource | undefined;
  Database?: DatabaseResource | undefined;
  Table?: TableResource | undefined;
  TableWithColumns?: TableWithColumnsResource | undefined;
  DataLocation?: DataLocationResource | undefined;
  DataCellsFilter?: DataCellsFilterResource | undefined;
  LFTag?: LFTagKeyResource | undefined;
  LFTagPolicy?: LFTagPolicyResource | undefined;
  LFTagExpression?: LFTagExpressionResource | undefined;
}
export interface AddLFTagsToResourceRequest {
  CatalogId?: string | undefined;
  Resource: Resource | undefined;
  LFTags: LFTagPair[] | undefined;
}
export interface ErrorDetail {
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface LFTagError {
  LFTag?: LFTagPair | undefined;
  Error?: ErrorDetail | undefined;
}
export interface AddLFTagsToResourceResponse {
  Failures?: LFTagError[] | undefined;
}
export declare class ConcurrentModificationException extends __BaseException {
  readonly name: "ConcurrentModificationException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ConcurrentModificationException,
      __BaseException
    >
  );
}
export declare class EntityNotFoundException extends __BaseException {
  readonly name: "EntityNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<EntityNotFoundException, __BaseException>
  );
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class InvalidInputException extends __BaseException {
  readonly name: "InvalidInputException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidInputException, __BaseException>
  );
}
export declare class OperationTimeoutException extends __BaseException {
  readonly name: "OperationTimeoutException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<OperationTimeoutException, __BaseException>
  );
}
export interface AddObjectInput {
  Uri: string | undefined;
  ETag: string | undefined;
  Size: number | undefined;
  PartitionValues?: string[] | undefined;
}
export interface AllRowsWildcard {}
export declare class AlreadyExistsException extends __BaseException {
  readonly name: "AlreadyExistsException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AlreadyExistsException, __BaseException>
  );
}
export declare const ApplicationStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ApplicationStatus =
  (typeof ApplicationStatus)[keyof typeof ApplicationStatus];
export interface AssumeDecoratedRoleWithSAMLRequest {
  SAMLAssertion: string | undefined;
  RoleArn: string | undefined;
  PrincipalArn: string | undefined;
  DurationSeconds?: number | undefined;
}
export interface AssumeDecoratedRoleWithSAMLResponse {
  AccessKeyId?: string | undefined;
  SecretAccessKey?: string | undefined;
  SessionToken?: string | undefined;
  Expiration?: Date | undefined;
}
export interface AuditContext {
  AdditionalAuditContext?: string | undefined;
}
export interface Condition {
  Expression?: string | undefined;
}
export declare const Permission: {
  readonly ALL: "ALL";
  readonly ALTER: "ALTER";
  readonly ASSOCIATE: "ASSOCIATE";
  readonly CREATE_CATALOG: "CREATE_CATALOG";
  readonly CREATE_DATABASE: "CREATE_DATABASE";
  readonly CREATE_LF_TAG: "CREATE_LF_TAG";
  readonly CREATE_LF_TAG_EXPRESSION: "CREATE_LF_TAG_EXPRESSION";
  readonly CREATE_TABLE: "CREATE_TABLE";
  readonly DATA_LOCATION_ACCESS: "DATA_LOCATION_ACCESS";
  readonly DELETE: "DELETE";
  readonly DESCRIBE: "DESCRIBE";
  readonly DROP: "DROP";
  readonly GRANT_WITH_LF_TAG_EXPRESSION: "GRANT_WITH_LF_TAG_EXPRESSION";
  readonly INSERT: "INSERT";
  readonly SELECT: "SELECT";
  readonly SUPER_USER: "SUPER_USER";
};
export type Permission = (typeof Permission)[keyof typeof Permission];
export interface DataLakePrincipal {
  DataLakePrincipalIdentifier?: string | undefined;
}
export interface BatchPermissionsRequestEntry {
  Id: string | undefined;
  Principal?: DataLakePrincipal | undefined;
  Resource?: Resource | undefined;
  Permissions?: Permission[] | undefined;
  Condition?: Condition | undefined;
  PermissionsWithGrantOption?: Permission[] | undefined;
}
export interface BatchGrantPermissionsRequest {
  CatalogId?: string | undefined;
  Entries: BatchPermissionsRequestEntry[] | undefined;
}
export interface BatchPermissionsFailureEntry {
  RequestEntry?: BatchPermissionsRequestEntry | undefined;
  Error?: ErrorDetail | undefined;
}
export interface BatchGrantPermissionsResponse {
  Failures?: BatchPermissionsFailureEntry[] | undefined;
}
export interface BatchRevokePermissionsRequest {
  CatalogId?: string | undefined;
  Entries: BatchPermissionsRequestEntry[] | undefined;
}
export interface BatchRevokePermissionsResponse {
  Failures?: BatchPermissionsFailureEntry[] | undefined;
}
export interface CancelTransactionRequest {
  TransactionId: string | undefined;
}
export interface CancelTransactionResponse {}
export declare class TransactionCommitInProgressException extends __BaseException {
  readonly name: "TransactionCommitInProgressException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      TransactionCommitInProgressException,
      __BaseException
    >
  );
}
export declare class TransactionCommittedException extends __BaseException {
  readonly name: "TransactionCommittedException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TransactionCommittedException, __BaseException>
  );
}
export interface CommitTransactionRequest {
  TransactionId: string | undefined;
}
export declare const TransactionStatus: {
  readonly ABORTED: "ABORTED";
  readonly ACTIVE: "ACTIVE";
  readonly COMMITTED: "COMMITTED";
  readonly COMMIT_IN_PROGRESS: "COMMIT_IN_PROGRESS";
};
export type TransactionStatus =
  (typeof TransactionStatus)[keyof typeof TransactionStatus];
export interface CommitTransactionResponse {
  TransactionStatus?: TransactionStatus | undefined;
}
export declare class TransactionCanceledException extends __BaseException {
  readonly name: "TransactionCanceledException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<TransactionCanceledException, __BaseException>
  );
}
export interface RowFilter {
  FilterExpression?: string | undefined;
  AllRowsWildcard?: AllRowsWildcard | undefined;
}
export interface DataCellsFilter {
  TableCatalogId: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  Name: string | undefined;
  RowFilter?: RowFilter | undefined;
  ColumnNames?: string[] | undefined;
  ColumnWildcard?: ColumnWildcard | undefined;
  VersionId?: string | undefined;
}
export interface CreateDataCellsFilterRequest {
  TableData: DataCellsFilter | undefined;
}
export interface CreateDataCellsFilterResponse {}
export declare class ResourceNumberLimitExceededException extends __BaseException {
  readonly name: "ResourceNumberLimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ResourceNumberLimitExceededException,
      __BaseException
    >
  );
}
export declare const EnableStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type EnableStatus = (typeof EnableStatus)[keyof typeof EnableStatus];
export interface ExternalFilteringConfiguration {
  Status: EnableStatus | undefined;
  AuthorizedTargets: string[] | undefined;
}
export interface CreateLakeFormationIdentityCenterConfigurationRequest {
  CatalogId?: string | undefined;
  InstanceArn?: string | undefined;
  ExternalFiltering?: ExternalFilteringConfiguration | undefined;
  ShareRecipients?: DataLakePrincipal[] | undefined;
}
export interface CreateLakeFormationIdentityCenterConfigurationResponse {
  ApplicationArn?: string | undefined;
}
export interface CreateLakeFormationOptInRequest {
  Principal: DataLakePrincipal | undefined;
  Resource: Resource | undefined;
  Condition?: Condition | undefined;
}
export interface CreateLakeFormationOptInResponse {}
export interface CreateLFTagRequest {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
  TagValues: string[] | undefined;
}
export interface CreateLFTagResponse {}
export interface CreateLFTagExpressionRequest {
  Name: string | undefined;
  Description?: string | undefined;
  CatalogId?: string | undefined;
  Expression: LFTag[] | undefined;
}
export interface CreateLFTagExpressionResponse {}
export interface DeleteDataCellsFilterRequest {
  TableCatalogId?: string | undefined;
  DatabaseName?: string | undefined;
  TableName?: string | undefined;
  Name?: string | undefined;
}
export interface DeleteDataCellsFilterResponse {}
export interface DeleteLakeFormationIdentityCenterConfigurationRequest {
  CatalogId?: string | undefined;
}
export interface DeleteLakeFormationIdentityCenterConfigurationResponse {}
export interface DeleteLakeFormationOptInRequest {
  Principal: DataLakePrincipal | undefined;
  Resource: Resource | undefined;
  Condition?: Condition | undefined;
}
export interface DeleteLakeFormationOptInResponse {}
export interface DeleteLFTagRequest {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
}
export interface DeleteLFTagResponse {}
export interface DeleteLFTagExpressionRequest {
  Name: string | undefined;
  CatalogId?: string | undefined;
}
export interface DeleteLFTagExpressionResponse {}
export interface VirtualObject {
  Uri: string | undefined;
  ETag?: string | undefined;
}
export interface DeleteObjectsOnCancelRequest {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  TransactionId: string | undefined;
  Objects: VirtualObject[] | undefined;
}
export interface DeleteObjectsOnCancelResponse {}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export interface DeregisterResourceRequest {
  ResourceArn: string | undefined;
}
export interface DeregisterResourceResponse {}
export interface DescribeLakeFormationIdentityCenterConfigurationRequest {
  CatalogId?: string | undefined;
}
export interface DescribeLakeFormationIdentityCenterConfigurationResponse {
  CatalogId?: string | undefined;
  InstanceArn?: string | undefined;
  ApplicationArn?: string | undefined;
  ExternalFiltering?: ExternalFilteringConfiguration | undefined;
  ShareRecipients?: DataLakePrincipal[] | undefined;
  ResourceShare?: string | undefined;
}
export interface DescribeResourceRequest {
  ResourceArn: string | undefined;
}
export interface ResourceInfo {
  ResourceArn?: string | undefined;
  RoleArn?: string | undefined;
  LastModified?: Date | undefined;
  WithFederation?: boolean | undefined;
  HybridAccessEnabled?: boolean | undefined;
  WithPrivilegedAccess?: boolean | undefined;
}
export interface DescribeResourceResponse {
  ResourceInfo?: ResourceInfo | undefined;
}
export interface DescribeTransactionRequest {
  TransactionId: string | undefined;
}
export interface TransactionDescription {
  TransactionId?: string | undefined;
  TransactionStatus?: TransactionStatus | undefined;
  TransactionStartTime?: Date | undefined;
  TransactionEndTime?: Date | undefined;
}
export interface DescribeTransactionResponse {
  TransactionDescription?: TransactionDescription | undefined;
}
export interface ExtendTransactionRequest {
  TransactionId?: string | undefined;
}
export interface ExtendTransactionResponse {}
export interface GetDataCellsFilterRequest {
  TableCatalogId: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  Name: string | undefined;
}
export interface GetDataCellsFilterResponse {
  DataCellsFilter?: DataCellsFilter | undefined;
}
export interface GetDataLakePrincipalRequest {}
export interface GetDataLakePrincipalResponse {
  Identity?: string | undefined;
}
export interface GetDataLakeSettingsRequest {
  CatalogId?: string | undefined;
}
export interface PrincipalPermissions {
  Principal?: DataLakePrincipal | undefined;
  Permissions?: Permission[] | undefined;
}
export interface DataLakeSettings {
  DataLakeAdmins?: DataLakePrincipal[] | undefined;
  ReadOnlyAdmins?: DataLakePrincipal[] | undefined;
  CreateDatabaseDefaultPermissions?: PrincipalPermissions[] | undefined;
  CreateTableDefaultPermissions?: PrincipalPermissions[] | undefined;
  Parameters?: Record<string, string> | undefined;
  TrustedResourceOwners?: string[] | undefined;
  AllowExternalDataFiltering?: boolean | undefined;
  AllowFullTableExternalDataAccess?: boolean | undefined;
  ExternalDataFilteringAllowList?: DataLakePrincipal[] | undefined;
  AuthorizedSessionTagValueList?: string[] | undefined;
}
export interface GetDataLakeSettingsResponse {
  DataLakeSettings?: DataLakeSettings | undefined;
}
export interface GetEffectivePermissionsForPathRequest {
  CatalogId?: string | undefined;
  ResourceArn: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface DetailsMap {
  ResourceShare?: string[] | undefined;
}
export interface PrincipalResourcePermissions {
  Principal?: DataLakePrincipal | undefined;
  Resource?: Resource | undefined;
  Condition?: Condition | undefined;
  Permissions?: Permission[] | undefined;
  PermissionsWithGrantOption?: Permission[] | undefined;
  AdditionalDetails?: DetailsMap | undefined;
  LastUpdated?: Date | undefined;
  LastUpdatedBy?: string | undefined;
}
export interface GetEffectivePermissionsForPathResponse {
  Permissions?: PrincipalResourcePermissions[] | undefined;
  NextToken?: string | undefined;
}
export interface GetLFTagRequest {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
}
export interface GetLFTagResponse {
  CatalogId?: string | undefined;
  TagKey?: string | undefined;
  TagValues?: string[] | undefined;
}
export interface GetLFTagExpressionRequest {
  Name: string | undefined;
  CatalogId?: string | undefined;
}
export interface GetLFTagExpressionResponse {
  Name?: string | undefined;
  Description?: string | undefined;
  CatalogId?: string | undefined;
  Expression?: LFTag[] | undefined;
}
export interface GetQueryStateRequest {
  QueryId: string | undefined;
}
export declare const QueryStateString: {
  readonly ERROR: "ERROR";
  readonly EXPIRED: "EXPIRED";
  readonly FINISHED: "FINISHED";
  readonly PENDING: "PENDING";
  readonly WORKUNITS_AVAILABLE: "WORKUNITS_AVAILABLE";
};
export type QueryStateString =
  (typeof QueryStateString)[keyof typeof QueryStateString];
export interface GetQueryStateResponse {
  Error?: string | undefined;
  State: QueryStateString | undefined;
}
export declare class ExpiredException extends __BaseException {
  readonly name: "ExpiredException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ExpiredException, __BaseException>);
}
export interface GetQueryStatisticsRequest {
  QueryId: string | undefined;
}
export interface ExecutionStatistics {
  AverageExecutionTimeMillis?: number | undefined;
  DataScannedBytes?: number | undefined;
  WorkUnitsExecutedCount?: number | undefined;
}
export interface PlanningStatistics {
  EstimatedDataToScanBytes?: number | undefined;
  PlanningTimeMillis?: number | undefined;
  QueueTimeMillis?: number | undefined;
  WorkUnitsGeneratedCount?: number | undefined;
}
export interface GetQueryStatisticsResponse {
  ExecutionStatistics?: ExecutionStatistics | undefined;
  PlanningStatistics?: PlanningStatistics | undefined;
  QuerySubmissionTime?: Date | undefined;
}
export declare class StatisticsNotReadyYetException extends __BaseException {
  readonly name: "StatisticsNotReadyYetException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<StatisticsNotReadyYetException, __BaseException>
  );
}
export declare class ThrottledException extends __BaseException {
  readonly name: "ThrottledException";
  readonly $fault: "client";
  $retryable: {
    throttling: boolean;
  };
  Message?: string | undefined;
  constructor(opts: __ExceptionOptionType<ThrottledException, __BaseException>);
}
export interface GetResourceLFTagsRequest {
  CatalogId?: string | undefined;
  Resource: Resource | undefined;
  ShowAssignedLFTags?: boolean | undefined;
}
export interface ColumnLFTag {
  Name?: string | undefined;
  LFTags?: LFTagPair[] | undefined;
}
export interface GetResourceLFTagsResponse {
  LFTagOnDatabase?: LFTagPair[] | undefined;
  LFTagsOnTable?: LFTagPair[] | undefined;
  LFTagsOnColumns?: ColumnLFTag[] | undefined;
}
export declare class GlueEncryptionException extends __BaseException {
  readonly name: "GlueEncryptionException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<GlueEncryptionException, __BaseException>
  );
}
export interface GetTableObjectsRequest {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  TransactionId?: string | undefined;
  QueryAsOfTime?: Date | undefined;
  PartitionPredicate?: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface TableObject {
  Uri?: string | undefined;
  ETag?: string | undefined;
  Size?: number | undefined;
}
export interface PartitionObjects {
  PartitionValues?: string[] | undefined;
  Objects?: TableObject[] | undefined;
}
export interface GetTableObjectsResponse {
  Objects?: PartitionObjects[] | undefined;
  NextToken?: string | undefined;
}
export interface PartitionValueList {
  Values: string[] | undefined;
}
export declare const PermissionType: {
  readonly CELL_FILTER_PERMISSION: "CELL_FILTER_PERMISSION";
  readonly COLUMN_PERMISSION: "COLUMN_PERMISSION";
  readonly NESTED_CELL_PERMISSION: "NESTED_CELL_PERMISSION";
  readonly NESTED_PERMISSION: "NESTED_PERMISSION";
};
export type PermissionType =
  (typeof PermissionType)[keyof typeof PermissionType];
export interface GetTemporaryGluePartitionCredentialsRequest {
  TableArn: string | undefined;
  Partition: PartitionValueList | undefined;
  Permissions?: Permission[] | undefined;
  DurationSeconds?: number | undefined;
  AuditContext?: AuditContext | undefined;
  SupportedPermissionTypes?: PermissionType[] | undefined;
}
export interface GetTemporaryGluePartitionCredentialsResponse {
  AccessKeyId?: string | undefined;
  SecretAccessKey?: string | undefined;
  SessionToken?: string | undefined;
  Expiration?: Date | undefined;
}
export declare class PermissionTypeMismatchException extends __BaseException {
  readonly name: "PermissionTypeMismatchException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      PermissionTypeMismatchException,
      __BaseException
    >
  );
}
export interface QuerySessionContext {
  QueryId?: string | undefined;
  QueryStartTime?: Date | undefined;
  ClusterId?: string | undefined;
  QueryAuthorizationId?: string | undefined;
  AdditionalContext?: Record<string, string> | undefined;
}
export interface GetTemporaryGlueTableCredentialsRequest {
  TableArn: string | undefined;
  Permissions?: Permission[] | undefined;
  DurationSeconds?: number | undefined;
  AuditContext?: AuditContext | undefined;
  SupportedPermissionTypes?: PermissionType[] | undefined;
  S3Path?: string | undefined;
  QuerySessionContext?: QuerySessionContext | undefined;
}
export interface GetTemporaryGlueTableCredentialsResponse {
  AccessKeyId?: string | undefined;
  SecretAccessKey?: string | undefined;
  SessionToken?: string | undefined;
  Expiration?: Date | undefined;
  VendedS3Path?: string[] | undefined;
}
export interface GetWorkUnitResultsRequest {
  QueryId: string | undefined;
  WorkUnitId: number | undefined;
  WorkUnitToken: string | undefined;
}
export interface GetWorkUnitResultsResponse {
  ResultStream?: StreamingBlobTypes | undefined;
}
export interface GetWorkUnitsRequest {
  NextToken?: string | undefined;
  PageSize?: number | undefined;
  QueryId: string | undefined;
}
export interface WorkUnitRange {
  WorkUnitIdMax: number | undefined;
  WorkUnitIdMin: number | undefined;
  WorkUnitToken: string | undefined;
}
export interface GetWorkUnitsResponse {
  NextToken?: string | undefined;
  QueryId: string | undefined;
  WorkUnitRanges: WorkUnitRange[] | undefined;
}
export declare class WorkUnitsNotReadyYetException extends __BaseException {
  readonly name: "WorkUnitsNotReadyYetException";
  readonly $fault: "client";
  Message?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<WorkUnitsNotReadyYetException, __BaseException>
  );
}
export interface GrantPermissionsRequest {
  CatalogId?: string | undefined;
  Principal: DataLakePrincipal | undefined;
  Resource: Resource | undefined;
  Permissions: Permission[] | undefined;
  Condition?: Condition | undefined;
  PermissionsWithGrantOption?: Permission[] | undefined;
}
export interface GrantPermissionsResponse {}
export interface ListDataCellsFilterRequest {
  Table?: TableResource | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListDataCellsFilterResponse {
  DataCellsFilters?: DataCellsFilter[] | undefined;
  NextToken?: string | undefined;
}
export interface ListLakeFormationOptInsRequest {
  Principal?: DataLakePrincipal | undefined;
  Resource?: Resource | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface LakeFormationOptInsInfo {
  Resource?: Resource | undefined;
  Principal?: DataLakePrincipal | undefined;
  Condition?: Condition | undefined;
  LastModified?: Date | undefined;
  LastUpdatedBy?: string | undefined;
}
export interface ListLakeFormationOptInsResponse {
  LakeFormationOptInsInfoList?: LakeFormationOptInsInfo[] | undefined;
  NextToken?: string | undefined;
}
export interface ListLFTagExpressionsRequest {
  CatalogId?: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface LFTagExpression {
  Name?: string | undefined;
  Description?: string | undefined;
  CatalogId?: string | undefined;
  Expression?: LFTag[] | undefined;
}
export interface ListLFTagExpressionsResponse {
  LFTagExpressions?: LFTagExpression[] | undefined;
  NextToken?: string | undefined;
}
export declare const ResourceShareType: {
  readonly ALL: "ALL";
  readonly FOREIGN: "FOREIGN";
};
export type ResourceShareType =
  (typeof ResourceShareType)[keyof typeof ResourceShareType];
export interface ListLFTagsRequest {
  CatalogId?: string | undefined;
  ResourceShareType?: ResourceShareType | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListLFTagsResponse {
  LFTags?: LFTagPair[] | undefined;
  NextToken?: string | undefined;
}
export declare const DataLakeResourceType: {
  readonly CATALOG: "CATALOG";
  readonly DATABASE: "DATABASE";
  readonly DATA_LOCATION: "DATA_LOCATION";
  readonly LF_NAMED_TAG_EXPRESSION: "LF_NAMED_TAG_EXPRESSION";
  readonly LF_TAG: "LF_TAG";
  readonly LF_TAG_POLICY: "LF_TAG_POLICY";
  readonly LF_TAG_POLICY_DATABASE: "LF_TAG_POLICY_DATABASE";
  readonly LF_TAG_POLICY_TABLE: "LF_TAG_POLICY_TABLE";
  readonly TABLE: "TABLE";
};
export type DataLakeResourceType =
  (typeof DataLakeResourceType)[keyof typeof DataLakeResourceType];
export interface ListPermissionsRequest {
  CatalogId?: string | undefined;
  Principal?: DataLakePrincipal | undefined;
  ResourceType?: DataLakeResourceType | undefined;
  Resource?: Resource | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  IncludeRelated?: string | undefined;
}
export interface ListPermissionsResponse {
  PrincipalResourcePermissions?: PrincipalResourcePermissions[] | undefined;
  NextToken?: string | undefined;
}
export declare const ComparisonOperator: {
  readonly BEGINS_WITH: "BEGINS_WITH";
  readonly BETWEEN: "BETWEEN";
  readonly CONTAINS: "CONTAINS";
  readonly EQ: "EQ";
  readonly GE: "GE";
  readonly GT: "GT";
  readonly IN: "IN";
  readonly LE: "LE";
  readonly LT: "LT";
  readonly NE: "NE";
  readonly NOT_CONTAINS: "NOT_CONTAINS";
};
export type ComparisonOperator =
  (typeof ComparisonOperator)[keyof typeof ComparisonOperator];
export declare const FieldNameString: {
  readonly LAST_MODIFIED: "LAST_MODIFIED";
  readonly RESOURCE_ARN: "RESOURCE_ARN";
  readonly ROLE_ARN: "ROLE_ARN";
};
export type FieldNameString =
  (typeof FieldNameString)[keyof typeof FieldNameString];
export interface FilterCondition {
  Field?: FieldNameString | undefined;
  ComparisonOperator?: ComparisonOperator | undefined;
  StringValueList?: string[] | undefined;
}
export interface ListResourcesRequest {
  FilterConditionList?: FilterCondition[] | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListResourcesResponse {
  ResourceInfoList?: ResourceInfo[] | undefined;
  NextToken?: string | undefined;
}
export declare const OptimizerType: {
  readonly COMPACTION: "COMPACTION";
  readonly GARBAGE_COLLECTION: "GARBAGE_COLLECTION";
  readonly GENERIC: "ALL";
};
export type OptimizerType = (typeof OptimizerType)[keyof typeof OptimizerType];
export interface ListTableStorageOptimizersRequest {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  StorageOptimizerType?: OptimizerType | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface StorageOptimizer {
  StorageOptimizerType?: OptimizerType | undefined;
  Config?: Record<string, string> | undefined;
  ErrorMessage?: string | undefined;
  Warnings?: string | undefined;
  LastRunDetails?: string | undefined;
}
export interface ListTableStorageOptimizersResponse {
  StorageOptimizerList?: StorageOptimizer[] | undefined;
  NextToken?: string | undefined;
}
export declare const TransactionStatusFilter: {
  readonly ABORTED: "ABORTED";
  readonly ACTIVE: "ACTIVE";
  readonly ALL: "ALL";
  readonly COMMITTED: "COMMITTED";
  readonly COMPLETED: "COMPLETED";
};
export type TransactionStatusFilter =
  (typeof TransactionStatusFilter)[keyof typeof TransactionStatusFilter];
export interface ListTransactionsRequest {
  CatalogId?: string | undefined;
  StatusFilter?: TransactionStatusFilter | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ListTransactionsResponse {
  Transactions?: TransactionDescription[] | undefined;
  NextToken?: string | undefined;
}
export interface PutDataLakeSettingsRequest {
  CatalogId?: string | undefined;
  DataLakeSettings: DataLakeSettings | undefined;
}
export interface PutDataLakeSettingsResponse {}
export interface RegisterResourceRequest {
  ResourceArn: string | undefined;
  UseServiceLinkedRole?: boolean | undefined;
  RoleArn?: string | undefined;
  WithFederation?: boolean | undefined;
  HybridAccessEnabled?: boolean | undefined;
  WithPrivilegedAccess?: boolean | undefined;
}
export interface RegisterResourceResponse {}
export interface RemoveLFTagsFromResourceRequest {
  CatalogId?: string | undefined;
  Resource: Resource | undefined;
  LFTags: LFTagPair[] | undefined;
}
export interface RemoveLFTagsFromResourceResponse {
  Failures?: LFTagError[] | undefined;
}
export interface RevokePermissionsRequest {
  CatalogId?: string | undefined;
  Principal: DataLakePrincipal | undefined;
  Resource: Resource | undefined;
  Permissions: Permission[] | undefined;
  Condition?: Condition | undefined;
  PermissionsWithGrantOption?: Permission[] | undefined;
}
export interface RevokePermissionsResponse {}
export interface SearchDatabasesByLFTagsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  CatalogId?: string | undefined;
  Expression: LFTag[] | undefined;
}
export interface TaggedDatabase {
  Database?: DatabaseResource | undefined;
  LFTags?: LFTagPair[] | undefined;
}
export interface SearchDatabasesByLFTagsResponse {
  NextToken?: string | undefined;
  DatabaseList?: TaggedDatabase[] | undefined;
}
export interface SearchTablesByLFTagsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  CatalogId?: string | undefined;
  Expression: LFTag[] | undefined;
}
export interface TaggedTable {
  Table?: TableResource | undefined;
  LFTagOnDatabase?: LFTagPair[] | undefined;
  LFTagsOnTable?: LFTagPair[] | undefined;
  LFTagsOnColumns?: ColumnLFTag[] | undefined;
}
export interface SearchTablesByLFTagsResponse {
  NextToken?: string | undefined;
  TableList?: TaggedTable[] | undefined;
}
export interface QueryPlanningContext {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  QueryAsOfTime?: Date | undefined;
  QueryParameters?: Record<string, string> | undefined;
  TransactionId?: string | undefined;
}
export interface StartQueryPlanningRequest {
  QueryPlanningContext: QueryPlanningContext | undefined;
  QueryString: string | undefined;
}
export interface StartQueryPlanningResponse {
  QueryId: string | undefined;
}
export declare const TransactionType: {
  readonly READ_AND_WRITE: "READ_AND_WRITE";
  readonly READ_ONLY: "READ_ONLY";
};
export type TransactionType =
  (typeof TransactionType)[keyof typeof TransactionType];
export interface StartTransactionRequest {
  TransactionType?: TransactionType | undefined;
}
export interface StartTransactionResponse {
  TransactionId?: string | undefined;
}
export interface UpdateDataCellsFilterRequest {
  TableData: DataCellsFilter | undefined;
}
export interface UpdateDataCellsFilterResponse {}
export interface UpdateLakeFormationIdentityCenterConfigurationRequest {
  CatalogId?: string | undefined;
  ShareRecipients?: DataLakePrincipal[] | undefined;
  ApplicationStatus?: ApplicationStatus | undefined;
  ExternalFiltering?: ExternalFilteringConfiguration | undefined;
}
export interface UpdateLakeFormationIdentityCenterConfigurationResponse {}
export interface UpdateLFTagRequest {
  CatalogId?: string | undefined;
  TagKey: string | undefined;
  TagValuesToDelete?: string[] | undefined;
  TagValuesToAdd?: string[] | undefined;
}
export interface UpdateLFTagResponse {}
export interface UpdateLFTagExpressionRequest {
  Name: string | undefined;
  Description?: string | undefined;
  CatalogId?: string | undefined;
  Expression: LFTag[] | undefined;
}
export interface UpdateLFTagExpressionResponse {}
export interface UpdateResourceRequest {
  RoleArn: string | undefined;
  ResourceArn: string | undefined;
  WithFederation?: boolean | undefined;
  HybridAccessEnabled?: boolean | undefined;
}
export interface UpdateResourceResponse {}
export interface DeleteObjectInput {
  Uri: string | undefined;
  ETag?: string | undefined;
  PartitionValues?: string[] | undefined;
}
export interface WriteOperation {
  AddObject?: AddObjectInput | undefined;
  DeleteObject?: DeleteObjectInput | undefined;
}
export interface UpdateTableObjectsRequest {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  TransactionId?: string | undefined;
  WriteOperations: WriteOperation[] | undefined;
}
export interface UpdateTableObjectsResponse {}
export interface UpdateTableStorageOptimizerRequest {
  CatalogId?: string | undefined;
  DatabaseName: string | undefined;
  TableName: string | undefined;
  StorageOptimizerConfig:
    | Partial<Record<OptimizerType, Record<string, string>>>
    | undefined;
}
export interface UpdateTableStorageOptimizerResponse {
  Result?: string | undefined;
}
export declare const GetWorkUnitResultsRequestFilterSensitiveLog: (
  obj: GetWorkUnitResultsRequest
) => any;
export declare const GetWorkUnitResultsResponseFilterSensitiveLog: (
  obj: GetWorkUnitResultsResponse
) => any;
export declare const StartQueryPlanningRequestFilterSensitiveLog: (
  obj: StartQueryPlanningRequest
) => any;
